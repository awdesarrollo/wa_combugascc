#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WA_CombugasCC.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="combugasCC")]
	public partial class ContextCombugasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void Insertcalles(calles instance);
    partial void Updatecalles(calles instance);
    partial void Deletecalles(calles instance);
    partial void Insertciudades(ciudades instance);
    partial void Updateciudades(ciudades instance);
    partial void Deleteciudades(ciudades instance);
    partial void Insertcolonias(colonias instance);
    partial void Updatecolonias(colonias instance);
    partial void Deletecolonias(colonias instance);
    partial void Insertcp(cp instance);
    partial void Updatecp(cp instance);
    partial void Deletecp(cp instance);
    partial void Insertestados(estados instance);
    partial void Updateestados(estados instance);
    partial void Deleteestados(estados instance);
    partial void Insertmodulos(modulos instance);
    partial void Updatemodulos(modulos instance);
    partial void Deletemodulos(modulos instance);
    partial void Insertpermisos(permisos instance);
    partial void Updatepermisos(permisos instance);
    partial void Deletepermisos(permisos instance);
    partial void Insertroles(roles instance);
    partial void Updateroles(roles instance);
    partial void Deleteroles(roles instance);
    partial void Inserttipo_asentamiento(tipo_asentamiento instance);
    partial void Updatetipo_asentamiento(tipo_asentamiento instance);
    partial void Deletetipo_asentamiento(tipo_asentamiento instance);
    partial void Inserttipo_calle(tipo_calle instance);
    partial void Updatetipo_calle(tipo_calle instance);
    partial void Deletetipo_calle(tipo_calle instance);
    partial void Insertusuarios(usuarios instance);
    partial void Updateusuarios(usuarios instance);
    partial void Deleteusuarios(usuarios instance);
    partial void Insertzonas(zonas instance);
    partial void Updatezonas(zonas instance);
    partial void Deletezonas(zonas instance);
    #endregion
		
		public ContextCombugasDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["combugasCCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<calles> calles
		{
			get
			{
				return this.GetTable<calles>();
			}
		}
		
		public System.Data.Linq.Table<ciudades> ciudades
		{
			get
			{
				return this.GetTable<ciudades>();
			}
		}
		
		public System.Data.Linq.Table<colonias> colonias
		{
			get
			{
				return this.GetTable<colonias>();
			}
		}
		
		public System.Data.Linq.Table<cp> cp
		{
			get
			{
				return this.GetTable<cp>();
			}
		}
		
		public System.Data.Linq.Table<estados> estados
		{
			get
			{
				return this.GetTable<estados>();
			}
		}
		
		public System.Data.Linq.Table<modulos> modulos
		{
			get
			{
				return this.GetTable<modulos>();
			}
		}
		
		public System.Data.Linq.Table<permisos> permisos
		{
			get
			{
				return this.GetTable<permisos>();
			}
		}
		
		public System.Data.Linq.Table<roles> roles
		{
			get
			{
				return this.GetTable<roles>();
			}
		}
		
		public System.Data.Linq.Table<tipo_asentamiento> tipo_asentamiento
		{
			get
			{
				return this.GetTable<tipo_asentamiento>();
			}
		}
		
		public System.Data.Linq.Table<tipo_calle> tipo_calle
		{
			get
			{
				return this.GetTable<tipo_calle>();
			}
		}
		
		public System.Data.Linq.Table<usuarios> usuarios
		{
			get
			{
				return this.GetTable<usuarios>();
			}
		}
		
		public System.Data.Linq.Table<zonas> zonas
		{
			get
			{
				return this.GetTable<zonas>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.calles")]
	public partial class calles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_calle;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private int _id_ciudad;
		
		private int _id_colonia;
		
		private string _descripcion;
		
		private bool _status;
		
		private System.Nullable<int> _id_tipo;
		
		private EntityRef<ciudades> _ciudades;
		
		private EntityRef<colonias> _colonias;
		
		private EntityRef<estados> _estados;
		
		private EntityRef<tipo_calle> _tipo_calle;
		
		private EntityRef<zonas> _zonas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_calleChanging(int value);
    partial void Onid_calleChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onid_coloniaChanging(int value);
    partial void Onid_coloniaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void Onid_tipoChanging(System.Nullable<int> value);
    partial void Onid_tipoChanged();
    #endregion
		
		public calles()
		{
			this._ciudades = default(EntityRef<ciudades>);
			this._colonias = default(EntityRef<colonias>);
			this._estados = default(EntityRef<estados>);
			this._tipo_calle = default(EntityRef<tipo_calle>);
			this._zonas = default(EntityRef<zonas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_calle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_calle
		{
			get
			{
				return this._id_calle;
			}
			set
			{
				if ((this._id_calle != value))
				{
					this.Onid_calleChanging(value);
					this.SendPropertyChanging();
					this._id_calle = value;
					this.SendPropertyChanged("id_calle");
					this.Onid_calleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zonas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._ciudades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_colonia", DbType="Int NOT NULL")]
		public int id_colonia
		{
			get
			{
				return this._id_colonia;
			}
			set
			{
				if ((this._id_colonia != value))
				{
					if (this._colonias.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_coloniaChanging(value);
					this.SendPropertyChanging();
					this._id_colonia = value;
					this.SendPropertyChanged("id_colonia");
					this.Onid_coloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo", DbType="Int")]
		public System.Nullable<int> id_tipo
		{
			get
			{
				return this._id_tipo;
			}
			set
			{
				if ((this._id_tipo != value))
				{
					if (this._tipo_calle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo = value;
					this.SendPropertyChanged("id_tipo");
					this.Onid_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudades_calles", Storage="_ciudades", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudades ciudades
		{
			get
			{
				return this._ciudades.Entity;
			}
			set
			{
				ciudades previousValue = this._ciudades.Entity;
				if (((previousValue != value) 
							|| (this._ciudades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudades.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._ciudades.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("ciudades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonias_calles", Storage="_colonias", ThisKey="id_colonia", OtherKey="id_colonia", IsForeignKey=true)]
		public colonias colonias
		{
			get
			{
				return this._colonias.Entity;
			}
			set
			{
				colonias previousValue = this._colonias.Entity;
				if (((previousValue != value) 
							|| (this._colonias.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colonias.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._colonias.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_colonia = value.id_colonia;
					}
					else
					{
						this._id_colonia = default(int);
					}
					this.SendPropertyChanged("colonias");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_calles", Storage="_estados", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estados estados
		{
			get
			{
				return this._estados.Entity;
			}
			set
			{
				estados previousValue = this._estados.Entity;
				if (((previousValue != value) 
							|| (this._estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estados.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._estados.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_calle_calles", Storage="_tipo_calle", ThisKey="id_tipo", OtherKey="id_tipo", IsForeignKey=true)]
		public tipo_calle tipo_calle
		{
			get
			{
				return this._tipo_calle.Entity;
			}
			set
			{
				tipo_calle previousValue = this._tipo_calle.Entity;
				if (((previousValue != value) 
							|| (this._tipo_calle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_calle.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._tipo_calle.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_tipo = value.id_tipo;
					}
					else
					{
						this._id_tipo = default(Nullable<int>);
					}
					this.SendPropertyChanged("tipo_calle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_calles", Storage="_zonas", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zonas zonas
		{
			get
			{
				return this._zonas.Entity;
			}
			set
			{
				zonas previousValue = this._zonas.Entity;
				if (((previousValue != value) 
							|| (this._zonas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zonas.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._zonas.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zonas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ciudades")]
	public partial class ciudades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ciudad;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<calles> _calles;
		
		private EntitySet<colonias> _colonias;
		
		private EntityRef<estados> _estados;
		
		private EntityRef<zonas> _zonas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public ciudades()
		{
			this._calles = new EntitySet<calles>(new Action<calles>(this.attach_calles), new Action<calles>(this.detach_calles));
			this._colonias = new EntitySet<colonias>(new Action<colonias>(this.attach_colonias), new Action<colonias>(this.detach_colonias));
			this._estados = default(EntityRef<estados>);
			this._zonas = default(EntityRef<zonas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zonas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudades_calles", Storage="_calles", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<calles> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudades_colonias", Storage="_colonias", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<colonias> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_ciudades", Storage="_estados", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estados estados
		{
			get
			{
				return this._estados.Entity;
			}
			set
			{
				estados previousValue = this._estados.Entity;
				if (((previousValue != value) 
							|| (this._estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estados.Entity = null;
						previousValue.ciudades.Remove(this);
					}
					this._estados.Entity = value;
					if ((value != null))
					{
						value.ciudades.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_ciudades", Storage="_zonas", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zonas zonas
		{
			get
			{
				return this._zonas.Entity;
			}
			set
			{
				zonas previousValue = this._zonas.Entity;
				if (((previousValue != value) 
							|| (this._zonas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zonas.Entity = null;
						previousValue.ciudades.Remove(this);
					}
					this._zonas.Entity = value;
					if ((value != null))
					{
						value.ciudades.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zonas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.ciudades = this;
		}
		
		private void detach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.ciudades = null;
		}
		
		private void attach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.ciudades = this;
		}
		
		private void detach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.ciudades = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colonias")]
	public partial class colonias : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_colonia;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private int _id_ciudad;
		
		private string _descripcion;
		
		private bool _status;
		
		private System.Nullable<int> _id_cp;
		
		private System.Nullable<int> _id_tipo;
		
		private EntitySet<calles> _calles;
		
		private EntityRef<ciudades> _ciudades;
		
		private EntityRef<cp> _cp;
		
		private EntityRef<estados> _estados;
		
		private EntityRef<tipo_asentamiento> _tipo_asentamiento;
		
		private EntityRef<zonas> _zonas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_coloniaChanging(int value);
    partial void Onid_coloniaChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void Onid_cpChanging(System.Nullable<int> value);
    partial void Onid_cpChanged();
    partial void Onid_tipoChanging(System.Nullable<int> value);
    partial void Onid_tipoChanged();
    #endregion
		
		public colonias()
		{
			this._calles = new EntitySet<calles>(new Action<calles>(this.attach_calles), new Action<calles>(this.detach_calles));
			this._ciudades = default(EntityRef<ciudades>);
			this._cp = default(EntityRef<cp>);
			this._estados = default(EntityRef<estados>);
			this._tipo_asentamiento = default(EntityRef<tipo_asentamiento>);
			this._zonas = default(EntityRef<zonas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_colonia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_colonia
		{
			get
			{
				return this._id_colonia;
			}
			set
			{
				if ((this._id_colonia != value))
				{
					this.Onid_coloniaChanging(value);
					this.SendPropertyChanging();
					this._id_colonia = value;
					this.SendPropertyChanged("id_colonia");
					this.Onid_coloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zonas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._ciudades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cp", DbType="Int")]
		public System.Nullable<int> id_cp
		{
			get
			{
				return this._id_cp;
			}
			set
			{
				if ((this._id_cp != value))
				{
					if (this._cp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_cpChanging(value);
					this.SendPropertyChanging();
					this._id_cp = value;
					this.SendPropertyChanged("id_cp");
					this.Onid_cpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo", DbType="Int")]
		public System.Nullable<int> id_tipo
		{
			get
			{
				return this._id_tipo;
			}
			set
			{
				if ((this._id_tipo != value))
				{
					if (this._tipo_asentamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo = value;
					this.SendPropertyChanged("id_tipo");
					this.Onid_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonias_calles", Storage="_calles", ThisKey="id_colonia", OtherKey="id_colonia")]
		public EntitySet<calles> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudades_colonias", Storage="_ciudades", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudades ciudades
		{
			get
			{
				return this._ciudades.Entity;
			}
			set
			{
				ciudades previousValue = this._ciudades.Entity;
				if (((previousValue != value) 
							|| (this._ciudades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudades.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._ciudades.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("ciudades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cp_colonias", Storage="_cp", ThisKey="id_cp", OtherKey="id_cp", IsForeignKey=true)]
		public cp cp
		{
			get
			{
				return this._cp.Entity;
			}
			set
			{
				cp previousValue = this._cp.Entity;
				if (((previousValue != value) 
							|| (this._cp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cp.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._cp.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_cp = value.id_cp;
					}
					else
					{
						this._id_cp = default(Nullable<int>);
					}
					this.SendPropertyChanged("cp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_colonias", Storage="_estados", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estados estados
		{
			get
			{
				return this._estados.Entity;
			}
			set
			{
				estados previousValue = this._estados.Entity;
				if (((previousValue != value) 
							|| (this._estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estados.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._estados.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_asentamiento_colonias", Storage="_tipo_asentamiento", ThisKey="id_tipo", OtherKey="id_tipo", IsForeignKey=true)]
		public tipo_asentamiento tipo_asentamiento
		{
			get
			{
				return this._tipo_asentamiento.Entity;
			}
			set
			{
				tipo_asentamiento previousValue = this._tipo_asentamiento.Entity;
				if (((previousValue != value) 
							|| (this._tipo_asentamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_asentamiento.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._tipo_asentamiento.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_tipo = value.id_tipo;
					}
					else
					{
						this._id_tipo = default(Nullable<int>);
					}
					this.SendPropertyChanged("tipo_asentamiento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_colonias", Storage="_zonas", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zonas zonas
		{
			get
			{
				return this._zonas.Entity;
			}
			set
			{
				zonas previousValue = this._zonas.Entity;
				if (((previousValue != value) 
							|| (this._zonas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zonas.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._zonas.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zonas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.colonias = this;
		}
		
		private void detach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.colonias = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cp")]
	public partial class cp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cp;
		
		private System.Nullable<int> _id_zona;
		
		private System.Nullable<int> _id_estado;
		
		private string _descripcion;
		
		private System.Nullable<bool> _status;
		
		private EntitySet<colonias> _colonias;
		
		private EntityRef<estados> _estados;
		
		private EntityRef<zonas> _zonas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_cpChanging(int value);
    partial void Onid_cpChanged();
    partial void Onid_zonaChanging(System.Nullable<int> value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(System.Nullable<int> value);
    partial void Onid_estadoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public cp()
		{
			this._colonias = new EntitySet<colonias>(new Action<colonias>(this.attach_colonias), new Action<colonias>(this.detach_colonias));
			this._estados = default(EntityRef<estados>);
			this._zonas = default(EntityRef<zonas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cp
		{
			get
			{
				return this._id_cp;
			}
			set
			{
				if ((this._id_cp != value))
				{
					this.Onid_cpChanging(value);
					this.SendPropertyChanging();
					this._id_cp = value;
					this.SendPropertyChanged("id_cp");
					this.Onid_cpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int")]
		public System.Nullable<int> id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zonas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int")]
		public System.Nullable<int> id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cp_colonias", Storage="_colonias", ThisKey="id_cp", OtherKey="id_cp")]
		public EntitySet<colonias> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_cp", Storage="_estados", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estados estados
		{
			get
			{
				return this._estados.Entity;
			}
			set
			{
				estados previousValue = this._estados.Entity;
				if (((previousValue != value) 
							|| (this._estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estados.Entity = null;
						previousValue.cp.Remove(this);
					}
					this._estados.Entity = value;
					if ((value != null))
					{
						value.cp.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(Nullable<int>);
					}
					this.SendPropertyChanged("estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_cp", Storage="_zonas", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zonas zonas
		{
			get
			{
				return this._zonas.Entity;
			}
			set
			{
				zonas previousValue = this._zonas.Entity;
				if (((previousValue != value) 
							|| (this._zonas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zonas.Entity = null;
						previousValue.cp.Remove(this);
					}
					this._zonas.Entity = value;
					if ((value != null))
					{
						value.cp.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(Nullable<int>);
					}
					this.SendPropertyChanged("zonas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.cp = this;
		}
		
		private void detach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.cp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estados")]
	public partial class estados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_estado;
		
		private int _id_zona;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<calles> _calles;
		
		private EntitySet<ciudades> _ciudades;
		
		private EntitySet<colonias> _colonias;
		
		private EntitySet<cp> _cp;
		
		private EntityRef<zonas> _zonas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public estados()
		{
			this._calles = new EntitySet<calles>(new Action<calles>(this.attach_calles), new Action<calles>(this.detach_calles));
			this._ciudades = new EntitySet<ciudades>(new Action<ciudades>(this.attach_ciudades), new Action<ciudades>(this.detach_ciudades));
			this._colonias = new EntitySet<colonias>(new Action<colonias>(this.attach_colonias), new Action<colonias>(this.detach_colonias));
			this._cp = new EntitySet<cp>(new Action<cp>(this.attach_cp), new Action<cp>(this.detach_cp));
			this._zonas = default(EntityRef<zonas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zonas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_calles", Storage="_calles", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<calles> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_ciudades", Storage="_ciudades", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<ciudades> ciudades
		{
			get
			{
				return this._ciudades;
			}
			set
			{
				this._ciudades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_colonias", Storage="_colonias", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<colonias> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estados_cp", Storage="_cp", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<cp> cp
		{
			get
			{
				return this._cp;
			}
			set
			{
				this._cp.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_estados", Storage="_zonas", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zonas zonas
		{
			get
			{
				return this._zonas.Entity;
			}
			set
			{
				zonas previousValue = this._zonas.Entity;
				if (((previousValue != value) 
							|| (this._zonas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zonas.Entity = null;
						previousValue.estados.Remove(this);
					}
					this._zonas.Entity = value;
					if ((value != null))
					{
						value.estados.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zonas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.estados = this;
		}
		
		private void detach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.estados = null;
		}
		
		private void attach_ciudades(ciudades entity)
		{
			this.SendPropertyChanging();
			entity.estados = this;
		}
		
		private void detach_ciudades(ciudades entity)
		{
			this.SendPropertyChanging();
			entity.estados = null;
		}
		
		private void attach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.estados = this;
		}
		
		private void detach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.estados = null;
		}
		
		private void attach_cp(cp entity)
		{
			this.SendPropertyChanging();
			entity.estados = this;
		}
		
		private void detach_cp(cp entity)
		{
			this.SendPropertyChanging();
			entity.estados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.modulos")]
	public partial class modulos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_modulo;
		
		private string _titulo;
		
		private string _url_modulo;
		
		private System.Nullable<bool> _isactive;
		
		private int _id_modulo_padre;
		
		private string _descripcion;
		
		private EntitySet<permisos> _permisos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_moduloChanging(int value);
    partial void Onid_moduloChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void Onurl_moduloChanging(string value);
    partial void Onurl_moduloChanged();
    partial void OnisactiveChanging(System.Nullable<bool> value);
    partial void OnisactiveChanged();
    partial void Onid_modulo_padreChanging(int value);
    partial void Onid_modulo_padreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public modulos()
		{
			this._permisos = new EntitySet<permisos>(new Action<permisos>(this.attach_permisos), new Action<permisos>(this.detach_permisos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modulo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_modulo
		{
			get
			{
				return this._id_modulo;
			}
			set
			{
				if ((this._id_modulo != value))
				{
					this.Onid_moduloChanging(value);
					this.SendPropertyChanging();
					this._id_modulo = value;
					this.SendPropertyChanged("id_modulo");
					this.Onid_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="NChar(50)")]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url_modulo", DbType="NChar(100)")]
		public string url_modulo
		{
			get
			{
				return this._url_modulo;
			}
			set
			{
				if ((this._url_modulo != value))
				{
					this.Onurl_moduloChanging(value);
					this.SendPropertyChanging();
					this._url_modulo = value;
					this.SendPropertyChanged("url_modulo");
					this.Onurl_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="Bit")]
		public System.Nullable<bool> isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modulo_padre", DbType="Int NOT NULL")]
		public int id_modulo_padre
		{
			get
			{
				return this._id_modulo_padre;
			}
			set
			{
				if ((this._id_modulo_padre != value))
				{
					this.Onid_modulo_padreChanging(value);
					this.SendPropertyChanging();
					this._id_modulo_padre = value;
					this.SendPropertyChanged("id_modulo_padre");
					this.Onid_modulo_padreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(100)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="modulos_permisos", Storage="_permisos", ThisKey="id_modulo", OtherKey="id_modulo")]
		public EntitySet<permisos> permisos
		{
			get
			{
				return this._permisos;
			}
			set
			{
				this._permisos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_permisos(permisos entity)
		{
			this.SendPropertyChanging();
			entity.modulos = this;
		}
		
		private void detach_permisos(permisos entity)
		{
			this.SendPropertyChanging();
			entity.modulos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.permisos")]
	public partial class permisos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol_modulo;
		
		private int _id_rol;
		
		private int _id_modulo;
		
		private string _observacion;
		
		private bool _status;
		
		private EntityRef<modulos> _modulos;
		
		private EntityRef<roles> _roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rol_moduloChanging(int value);
    partial void Onid_rol_moduloChanged();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void Onid_moduloChanging(int value);
    partial void Onid_moduloChanged();
    partial void OnobservacionChanging(string value);
    partial void OnobservacionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public permisos()
		{
			this._modulos = default(EntityRef<modulos>);
			this._roles = default(EntityRef<roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol_modulo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rol_modulo
		{
			get
			{
				return this._id_rol_modulo;
			}
			set
			{
				if ((this._id_rol_modulo != value))
				{
					this.Onid_rol_moduloChanging(value);
					this.SendPropertyChanging();
					this._id_rol_modulo = value;
					this.SendPropertyChanged("id_rol_modulo");
					this.Onid_rol_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modulo", DbType="Int NOT NULL")]
		public int id_modulo
		{
			get
			{
				return this._id_modulo;
			}
			set
			{
				if ((this._id_modulo != value))
				{
					if (this._modulos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_moduloChanging(value);
					this.SendPropertyChanging();
					this._id_modulo = value;
					this.SendPropertyChanged("id_modulo");
					this.Onid_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observacion", DbType="VarChar(700) NOT NULL", CanBeNull=false)]
		public string observacion
		{
			get
			{
				return this._observacion;
			}
			set
			{
				if ((this._observacion != value))
				{
					this.OnobservacionChanging(value);
					this.SendPropertyChanging();
					this._observacion = value;
					this.SendPropertyChanged("observacion");
					this.OnobservacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="modulos_permisos", Storage="_modulos", ThisKey="id_modulo", OtherKey="id_modulo", IsForeignKey=true)]
		public modulos modulos
		{
			get
			{
				return this._modulos.Entity;
			}
			set
			{
				modulos previousValue = this._modulos.Entity;
				if (((previousValue != value) 
							|| (this._modulos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._modulos.Entity = null;
						previousValue.permisos.Remove(this);
					}
					this._modulos.Entity = value;
					if ((value != null))
					{
						value.permisos.Add(this);
						this._id_modulo = value.id_modulo;
					}
					else
					{
						this._id_modulo = default(int);
					}
					this.SendPropertyChanged("modulos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_permisos", Storage="_roles", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public roles roles
		{
			get
			{
				return this._roles.Entity;
			}
			set
			{
				roles previousValue = this._roles.Entity;
				if (((previousValue != value) 
							|| (this._roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._roles.Entity = null;
						previousValue.permisos.Remove(this);
					}
					this._roles.Entity = value;
					if ((value != null))
					{
						value.permisos.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(int);
					}
					this.SendPropertyChanged("roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<permisos> _permisos;
		
		private EntitySet<usuarios> _usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public roles()
		{
			this._permisos = new EntitySet<permisos>(new Action<permisos>(this.attach_permisos), new Action<permisos>(this.detach_permisos));
			this._usuarios = new EntitySet<usuarios>(new Action<usuarios>(this.attach_usuarios), new Action<usuarios>(this.detach_usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_permisos", Storage="_permisos", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<permisos> permisos
		{
			get
			{
				return this._permisos;
			}
			set
			{
				this._permisos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_usuarios", Storage="_usuarios", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<usuarios> usuarios
		{
			get
			{
				return this._usuarios;
			}
			set
			{
				this._usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_permisos(permisos entity)
		{
			this.SendPropertyChanging();
			entity.roles = this;
		}
		
		private void detach_permisos(permisos entity)
		{
			this.SendPropertyChanging();
			entity.roles = null;
		}
		
		private void attach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.roles = this;
		}
		
		private void detach_usuarios(usuarios entity)
		{
			this.SendPropertyChanging();
			entity.roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_asentamiento")]
	public partial class tipo_asentamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_tipo;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<colonias> _colonias;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tipoChanging(int value);
    partial void Onid_tipoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public tipo_asentamiento()
		{
			this._colonias = new EntitySet<colonias>(new Action<colonias>(this.attach_colonias), new Action<colonias>(this.detach_colonias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_tipo
		{
			get
			{
				return this._id_tipo;
			}
			set
			{
				if ((this._id_tipo != value))
				{
					this.Onid_tipoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo = value;
					this.SendPropertyChanged("id_tipo");
					this.Onid_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_asentamiento_colonias", Storage="_colonias", ThisKey="id_tipo", OtherKey="id_tipo")]
		public EntitySet<colonias> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.tipo_asentamiento = this;
		}
		
		private void detach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.tipo_asentamiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_calle")]
	public partial class tipo_calle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_tipo;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<calles> _calles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tipoChanging(int value);
    partial void Onid_tipoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public tipo_calle()
		{
			this._calles = new EntitySet<calles>(new Action<calles>(this.attach_calles), new Action<calles>(this.detach_calles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_tipo
		{
			get
			{
				return this._id_tipo;
			}
			set
			{
				if ((this._id_tipo != value))
				{
					this.Onid_tipoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo = value;
					this.SendPropertyChanged("id_tipo");
					this.Onid_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_calle_calles", Storage="_calles", ThisKey="id_tipo", OtherKey="id_tipo")]
		public EntitySet<calles> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.tipo_calle = this;
		}
		
		private void detach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.tipo_calle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_usuario;
		
		private string _nombre;
		
		private string _username;
		
		private string _passwords;
		
		private bool _isactive;
		
		private bool _userisonline;
		
		private System.Nullable<System.DateTime> _ultimoacceso;
		
		private System.Nullable<int> _id_rol;
		
		private System.Nullable<System.DateTime> _horaultimoacceso;
		
		private System.Nullable<int> _maxsesion;
		
		private System.Nullable<int> _sesionactiva;
		
		private EntityRef<roles> _roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordsChanging(string value);
    partial void OnpasswordsChanged();
    partial void OnisactiveChanging(bool value);
    partial void OnisactiveChanged();
    partial void OnuserisonlineChanging(bool value);
    partial void OnuserisonlineChanged();
    partial void OnultimoaccesoChanging(System.Nullable<System.DateTime> value);
    partial void OnultimoaccesoChanged();
    partial void Onid_rolChanging(System.Nullable<int> value);
    partial void Onid_rolChanged();
    partial void OnhoraultimoaccesoChanging(System.Nullable<System.DateTime> value);
    partial void OnhoraultimoaccesoChanged();
    partial void OnmaxsesionChanging(System.Nullable<int> value);
    partial void OnmaxsesionChanged();
    partial void OnsesionactivaChanging(System.Nullable<int> value);
    partial void OnsesionactivaChanged();
    #endregion
		
		public usuarios()
		{
			this._roles = default(EntityRef<roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwords", DbType="VarChar(30)")]
		public string passwords
		{
			get
			{
				return this._passwords;
			}
			set
			{
				if ((this._passwords != value))
				{
					this.OnpasswordsChanging(value);
					this.SendPropertyChanging();
					this._passwords = value;
					this.SendPropertyChanged("passwords");
					this.OnpasswordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="Bit NOT NULL")]
		public bool isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userisonline", DbType="Bit NOT NULL")]
		public bool userisonline
		{
			get
			{
				return this._userisonline;
			}
			set
			{
				if ((this._userisonline != value))
				{
					this.OnuserisonlineChanging(value);
					this.SendPropertyChanging();
					this._userisonline = value;
					this.SendPropertyChanged("userisonline");
					this.OnuserisonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ultimoacceso", DbType="Date")]
		public System.Nullable<System.DateTime> ultimoacceso
		{
			get
			{
				return this._ultimoacceso;
			}
			set
			{
				if ((this._ultimoacceso != value))
				{
					this.OnultimoaccesoChanging(value);
					this.SendPropertyChanging();
					this._ultimoacceso = value;
					this.SendPropertyChanged("ultimoacceso");
					this.OnultimoaccesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int")]
		public System.Nullable<int> id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_horaultimoacceso", DbType="DateTime")]
		public System.Nullable<System.DateTime> horaultimoacceso
		{
			get
			{
				return this._horaultimoacceso;
			}
			set
			{
				if ((this._horaultimoacceso != value))
				{
					this.OnhoraultimoaccesoChanging(value);
					this.SendPropertyChanging();
					this._horaultimoacceso = value;
					this.SendPropertyChanged("horaultimoacceso");
					this.OnhoraultimoaccesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxsesion", DbType="Int")]
		public System.Nullable<int> maxsesion
		{
			get
			{
				return this._maxsesion;
			}
			set
			{
				if ((this._maxsesion != value))
				{
					this.OnmaxsesionChanging(value);
					this.SendPropertyChanging();
					this._maxsesion = value;
					this.SendPropertyChanged("maxsesion");
					this.OnmaxsesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sesionactiva", DbType="Int")]
		public System.Nullable<int> sesionactiva
		{
			get
			{
				return this._sesionactiva;
			}
			set
			{
				if ((this._sesionactiva != value))
				{
					this.OnsesionactivaChanging(value);
					this.SendPropertyChanging();
					this._sesionactiva = value;
					this.SendPropertyChanged("sesionactiva");
					this.OnsesionactivaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="roles_usuarios", Storage="_roles", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public roles roles
		{
			get
			{
				return this._roles.Entity;
			}
			set
			{
				roles previousValue = this._roles.Entity;
				if (((previousValue != value) 
							|| (this._roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._roles.Entity = null;
						previousValue.usuarios.Remove(this);
					}
					this._roles.Entity = value;
					if ((value != null))
					{
						value.usuarios.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zonas")]
	public partial class zonas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_zona;
		
		private string _descripcion;
		
		private bool _estado;
		
		private EntitySet<calles> _calles;
		
		private EntitySet<ciudades> _ciudades;
		
		private EntitySet<colonias> _colonias;
		
		private EntitySet<cp> _cp;
		
		private EntitySet<estados> _estados;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnestadoChanging(bool value);
    partial void OnestadoChanged();
    #endregion
		
		public zonas()
		{
			this._calles = new EntitySet<calles>(new Action<calles>(this.attach_calles), new Action<calles>(this.detach_calles));
			this._ciudades = new EntitySet<ciudades>(new Action<ciudades>(this.attach_ciudades), new Action<ciudades>(this.detach_ciudades));
			this._colonias = new EntitySet<colonias>(new Action<colonias>(this.attach_colonias), new Action<colonias>(this.detach_colonias));
			this._cp = new EntitySet<cp>(new Action<cp>(this.attach_cp), new Action<cp>(this.detach_cp));
			this._estados = new EntitySet<estados>(new Action<estados>(this.attach_estados), new Action<estados>(this.detach_estados));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Bit NOT NULL")]
		public bool estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_calles", Storage="_calles", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<calles> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_ciudades", Storage="_ciudades", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<ciudades> ciudades
		{
			get
			{
				return this._ciudades;
			}
			set
			{
				this._ciudades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_colonias", Storage="_colonias", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<colonias> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_cp", Storage="_cp", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<cp> cp
		{
			get
			{
				return this._cp;
			}
			set
			{
				this._cp.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zonas_estados", Storage="_estados", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<estados> estados
		{
			get
			{
				return this._estados;
			}
			set
			{
				this._estados.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.zonas = this;
		}
		
		private void detach_calles(calles entity)
		{
			this.SendPropertyChanging();
			entity.zonas = null;
		}
		
		private void attach_ciudades(ciudades entity)
		{
			this.SendPropertyChanging();
			entity.zonas = this;
		}
		
		private void detach_ciudades(ciudades entity)
		{
			this.SendPropertyChanging();
			entity.zonas = null;
		}
		
		private void attach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.zonas = this;
		}
		
		private void detach_colonias(colonias entity)
		{
			this.SendPropertyChanging();
			entity.zonas = null;
		}
		
		private void attach_cp(cp entity)
		{
			this.SendPropertyChanging();
			entity.zonas = this;
		}
		
		private void detach_cp(cp entity)
		{
			this.SendPropertyChanging();
			entity.zonas = null;
		}
		
		private void attach_estados(estados entity)
		{
			this.SendPropertyChanging();
			entity.zonas = this;
		}
		
		private void detach_estados(estados entity)
		{
			this.SendPropertyChanging();
			entity.zonas = null;
		}
	}
}
#pragma warning restore 1591
