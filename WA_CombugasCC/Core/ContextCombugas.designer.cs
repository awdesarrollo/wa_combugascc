#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WA_CombugasCC.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="combugasCC")]
	public partial class ContextCombugasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertasigna_ruta_repartidor(asigna_ruta_repartidor instance);
    partial void Updateasigna_ruta_repartidor(asigna_ruta_repartidor instance);
    partial void Deleteasigna_ruta_repartidor(asigna_ruta_repartidor instance);
    partial void Insertzona(zona instance);
    partial void Updatezona(zona instance);
    partial void Deletezona(zona instance);
    partial void Insertasigna_ruta_user(asigna_ruta_user instance);
    partial void Updateasigna_ruta_user(asigna_ruta_user instance);
    partial void Deleteasigna_ruta_user(asigna_ruta_user instance);
    partial void Insertcalle(calle instance);
    partial void Updatecalle(calle instance);
    partial void Deletecalle(calle instance);
    partial void Insertciudade(ciudade instance);
    partial void Updateciudade(ciudade instance);
    partial void Deleteciudade(ciudade instance);
    partial void Insertcliente(cliente instance);
    partial void Updatecliente(cliente instance);
    partial void Deletecliente(cliente instance);
    partial void Insertcolonia(colonia instance);
    partial void Updatecolonia(colonia instance);
    partial void Deletecolonia(colonia instance);
    partial void Insertdireccione(direccione instance);
    partial void Updatedireccione(direccione instance);
    partial void Deletedireccione(direccione instance);
    partial void Insertestado(estado instance);
    partial void Updateestado(estado instance);
    partial void Deleteestado(estado instance);
    partial void Insertformas_pago(formas_pago instance);
    partial void Updateformas_pago(formas_pago instance);
    partial void Deleteformas_pago(formas_pago instance);
    partial void Insertmodulo(modulo instance);
    partial void Updatemodulo(modulo instance);
    partial void Deletemodulo(modulo instance);
    partial void Insertpedido(pedido instance);
    partial void Updatepedido(pedido instance);
    partial void Deletepedido(pedido instance);
    partial void Insertpedidos_detalle(pedidos_detalle instance);
    partial void Updatepedidos_detalle(pedidos_detalle instance);
    partial void Deletepedidos_detalle(pedidos_detalle instance);
    partial void Insertpermiso(permiso instance);
    partial void Updatepermiso(permiso instance);
    partial void Deletepermiso(permiso instance);
    partial void Insertprecio(precio instance);
    partial void Updateprecio(precio instance);
    partial void Deleteprecio(precio instance);
    partial void Insertrepartidor(repartidor instance);
    partial void Updaterepartidor(repartidor instance);
    partial void Deleterepartidor(repartidor instance);
    partial void Insertreporte_falla(reporte_falla instance);
    partial void Updatereporte_falla(reporte_falla instance);
    partial void Deletereporte_falla(reporte_falla instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Insertruta(ruta instance);
    partial void Updateruta(ruta instance);
    partial void Deleteruta(ruta instance);
    partial void Insertservicio(servicio instance);
    partial void Updateservicio(servicio instance);
    partial void Deleteservicio(servicio instance);
    partial void Inserttipo_cliente(tipo_cliente instance);
    partial void Updatetipo_cliente(tipo_cliente instance);
    partial void Deletetipo_cliente(tipo_cliente instance);
    partial void Inserttipo_repartidor(tipo_repartidor instance);
    partial void Updatetipo_repartidor(tipo_repartidor instance);
    partial void Deletetipo_repartidor(tipo_repartidor instance);
    partial void Insertunidad_venta(unidad_venta instance);
    partial void Updateunidad_venta(unidad_venta instance);
    partial void Deleteunidad_venta(unidad_venta instance);
    partial void Insertunidade(unidade instance);
    partial void Updateunidade(unidade instance);
    partial void Deleteunidade(unidade instance);
    partial void Insertusuario(usuario instance);
    partial void Updateusuario(usuario instance);
    partial void Deleteusuario(usuario instance);
    #endregion
		
		public ContextCombugasDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["combugasCCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ContextCombugasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<asigna_ruta_repartidor> asigna_ruta_repartidors
		{
			get
			{
				return this.GetTable<asigna_ruta_repartidor>();
			}
		}
		
		public System.Data.Linq.Table<zona> zonas
		{
			get
			{
				return this.GetTable<zona>();
			}
		}
		
		public System.Data.Linq.Table<asigna_ruta_user> asigna_ruta_users
		{
			get
			{
				return this.GetTable<asigna_ruta_user>();
			}
		}
		
		public System.Data.Linq.Table<calle> calles
		{
			get
			{
				return this.GetTable<calle>();
			}
		}
		
		public System.Data.Linq.Table<ciudade> ciudades
		{
			get
			{
				return this.GetTable<ciudade>();
			}
		}
		
		public System.Data.Linq.Table<cliente> clientes
		{
			get
			{
				return this.GetTable<cliente>();
			}
		}
		
		public System.Data.Linq.Table<colonia> colonias
		{
			get
			{
				return this.GetTable<colonia>();
			}
		}
		
		public System.Data.Linq.Table<direccione> direcciones
		{
			get
			{
				return this.GetTable<direccione>();
			}
		}
		
		public System.Data.Linq.Table<estado> estados
		{
			get
			{
				return this.GetTable<estado>();
			}
		}
		
		public System.Data.Linq.Table<formas_pago> formas_pagos
		{
			get
			{
				return this.GetTable<formas_pago>();
			}
		}
		
		public System.Data.Linq.Table<modulo> modulos
		{
			get
			{
				return this.GetTable<modulo>();
			}
		}
		
		public System.Data.Linq.Table<pedido> pedidos
		{
			get
			{
				return this.GetTable<pedido>();
			}
		}
		
		public System.Data.Linq.Table<pedidos_detalle> pedidos_detalles
		{
			get
			{
				return this.GetTable<pedidos_detalle>();
			}
		}
		
		public System.Data.Linq.Table<permiso> permisos
		{
			get
			{
				return this.GetTable<permiso>();
			}
		}
		
		public System.Data.Linq.Table<precio> precios
		{
			get
			{
				return this.GetTable<precio>();
			}
		}
		
		public System.Data.Linq.Table<repartidor> repartidors
		{
			get
			{
				return this.GetTable<repartidor>();
			}
		}
		
		public System.Data.Linq.Table<reporte_falla> reporte_fallas
		{
			get
			{
				return this.GetTable<reporte_falla>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<ruta> rutas
		{
			get
			{
				return this.GetTable<ruta>();
			}
		}
		
		public System.Data.Linq.Table<servicio> servicios
		{
			get
			{
				return this.GetTable<servicio>();
			}
		}
		
		public System.Data.Linq.Table<tipo_cliente> tipo_clientes
		{
			get
			{
				return this.GetTable<tipo_cliente>();
			}
		}
		
		public System.Data.Linq.Table<tipo_repartidor> tipo_repartidors
		{
			get
			{
				return this.GetTable<tipo_repartidor>();
			}
		}
		
		public System.Data.Linq.Table<unidad_venta> unidad_ventas
		{
			get
			{
				return this.GetTable<unidad_venta>();
			}
		}
		
		public System.Data.Linq.Table<unidade> unidades
		{
			get
			{
				return this.GetTable<unidade>();
			}
		}
		
		public System.Data.Linq.Table<usuario> usuarios
		{
			get
			{
				return this.GetTable<usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.asigna_ruta_repartidor")]
	public partial class asigna_ruta_repartidor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_asigna;
		
		private int _id_repartidor;
		
		private int _id_ruta;
		
		private System.Nullable<bool> _status;
		
		private EntityRef<repartidor> _repartidor;
		
		private EntityRef<ruta> _ruta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_asignaChanging(int value);
    partial void Onid_asignaChanged();
    partial void Onid_repartidorChanging(int value);
    partial void Onid_repartidorChanged();
    partial void Onid_rutaChanging(int value);
    partial void Onid_rutaChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public asigna_ruta_repartidor()
		{
			this._repartidor = default(EntityRef<repartidor>);
			this._ruta = default(EntityRef<ruta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_asigna", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_asigna
		{
			get
			{
				return this._id_asigna;
			}
			set
			{
				if ((this._id_asigna != value))
				{
					this.Onid_asignaChanging(value);
					this.SendPropertyChanging();
					this._id_asigna = value;
					this.SendPropertyChanged("id_asigna");
					this.Onid_asignaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_repartidor", DbType="Int NOT NULL")]
		public int id_repartidor
		{
			get
			{
				return this._id_repartidor;
			}
			set
			{
				if ((this._id_repartidor != value))
				{
					if (this._repartidor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_repartidorChanging(value);
					this.SendPropertyChanging();
					this._id_repartidor = value;
					this.SendPropertyChanged("id_repartidor");
					this.Onid_repartidorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ruta", DbType="Int NOT NULL")]
		public int id_ruta
		{
			get
			{
				return this._id_ruta;
			}
			set
			{
				if ((this._id_ruta != value))
				{
					if (this._ruta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rutaChanging(value);
					this.SendPropertyChanging();
					this._id_ruta = value;
					this.SendPropertyChanged("id_ruta");
					this.Onid_rutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repartidor_asigna_ruta_repartidor", Storage="_repartidor", ThisKey="id_repartidor", OtherKey="id_repartidor", IsForeignKey=true)]
		public repartidor repartidor
		{
			get
			{
				return this._repartidor.Entity;
			}
			set
			{
				repartidor previousValue = this._repartidor.Entity;
				if (((previousValue != value) 
							|| (this._repartidor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._repartidor.Entity = null;
						previousValue.asigna_ruta_repartidors.Remove(this);
					}
					this._repartidor.Entity = value;
					if ((value != null))
					{
						value.asigna_ruta_repartidors.Add(this);
						this._id_repartidor = value.id_repartidor;
					}
					else
					{
						this._id_repartidor = default(int);
					}
					this.SendPropertyChanged("repartidor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ruta_asigna_ruta_repartidor", Storage="_ruta", ThisKey="id_ruta", OtherKey="id_ruta", IsForeignKey=true)]
		public ruta ruta
		{
			get
			{
				return this._ruta.Entity;
			}
			set
			{
				ruta previousValue = this._ruta.Entity;
				if (((previousValue != value) 
							|| (this._ruta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ruta.Entity = null;
						previousValue.asigna_ruta_repartidors.Remove(this);
					}
					this._ruta.Entity = value;
					if ((value != null))
					{
						value.asigna_ruta_repartidors.Add(this);
						this._id_ruta = value.id_ruta;
					}
					else
					{
						this._id_ruta = default(int);
					}
					this.SendPropertyChanged("ruta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zonas")]
	public partial class zona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_zona;
		
		private string _descripcion;
		
		private bool _estado;
		
		private EntitySet<calle> _calles;
		
		private EntitySet<ciudade> _ciudades;
		
		private EntitySet<colonia> _colonias;
		
		private EntitySet<direccione> _direcciones;
		
		private EntitySet<estado> _estados;
		
		private EntitySet<repartidor> _repartidors;
		
		private EntitySet<ruta> _rutas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnestadoChanging(bool value);
    partial void OnestadoChanged();
    #endregion
		
		public zona()
		{
			this._calles = new EntitySet<calle>(new Action<calle>(this.attach_calles), new Action<calle>(this.detach_calles));
			this._ciudades = new EntitySet<ciudade>(new Action<ciudade>(this.attach_ciudades), new Action<ciudade>(this.detach_ciudades));
			this._colonias = new EntitySet<colonia>(new Action<colonia>(this.attach_colonias), new Action<colonia>(this.detach_colonias));
			this._direcciones = new EntitySet<direccione>(new Action<direccione>(this.attach_direcciones), new Action<direccione>(this.detach_direcciones));
			this._estados = new EntitySet<estado>(new Action<estado>(this.attach_estados), new Action<estado>(this.detach_estados));
			this._repartidors = new EntitySet<repartidor>(new Action<repartidor>(this.attach_repartidors), new Action<repartidor>(this.detach_repartidors));
			this._rutas = new EntitySet<ruta>(new Action<ruta>(this.attach_rutas), new Action<ruta>(this.detach_rutas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estado", DbType="Bit NOT NULL")]
		public bool estado
		{
			get
			{
				return this._estado;
			}
			set
			{
				if ((this._estado != value))
				{
					this.OnestadoChanging(value);
					this.SendPropertyChanging();
					this._estado = value;
					this.SendPropertyChanged("estado");
					this.OnestadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_calle", Storage="_calles", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<calle> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_ciudade", Storage="_ciudades", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<ciudade> ciudades
		{
			get
			{
				return this._ciudades;
			}
			set
			{
				this._ciudades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_colonia", Storage="_colonias", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<colonia> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_direccione", Storage="_direcciones", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<direccione> direcciones
		{
			get
			{
				return this._direcciones;
			}
			set
			{
				this._direcciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_estado", Storage="_estados", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<estado> estados
		{
			get
			{
				return this._estados;
			}
			set
			{
				this._estados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_repartidor", Storage="_repartidors", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<repartidor> repartidors
		{
			get
			{
				return this._repartidors;
			}
			set
			{
				this._repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_ruta", Storage="_rutas", ThisKey="id_zona", OtherKey="id_zona")]
		public EntitySet<ruta> rutas
		{
			get
			{
				return this._rutas;
			}
			set
			{
				this._rutas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.zona = this;
		}
		
		private void detach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.zona = null;
		}
		
		private void attach_ciudades(ciudade entity)
		{
			this.SendPropertyChanging();
			entity.zona = this;
		}
		
		private void detach_ciudades(ciudade entity)
		{
			this.SendPropertyChanging();
			entity.zona = null;
		}
		
		private void attach_colonias(colonia entity)
		{
			this.SendPropertyChanging();
			entity.zona = this;
		}
		
		private void detach_colonias(colonia entity)
		{
			this.SendPropertyChanging();
			entity.zona = null;
		}
		
		private void attach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.zona = this;
		}
		
		private void detach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.zona = null;
		}
		
		private void attach_estados(estado entity)
		{
			this.SendPropertyChanging();
			entity.zona = this;
		}
		
		private void detach_estados(estado entity)
		{
			this.SendPropertyChanging();
			entity.zona = null;
		}
		
		private void attach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.zona = this;
		}
		
		private void detach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.zona = null;
		}
		
		private void attach_rutas(ruta entity)
		{
			this.SendPropertyChanging();
			entity.zona = this;
		}
		
		private void detach_rutas(ruta entity)
		{
			this.SendPropertyChanging();
			entity.zona = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.asigna_ruta_user")]
	public partial class asigna_ruta_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_asigna;
		
		private int _id_usuario;
		
		private int _id_ruta;
		
		private System.Nullable<bool> _status;
		
		private EntityRef<ruta> _ruta;
		
		private EntityRef<usuario> _usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_asignaChanging(int value);
    partial void Onid_asignaChanged();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void Onid_rutaChanging(int value);
    partial void Onid_rutaChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public asigna_ruta_user()
		{
			this._ruta = default(EntityRef<ruta>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_asigna", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_asigna
		{
			get
			{
				return this._id_asigna;
			}
			set
			{
				if ((this._id_asigna != value))
				{
					this.Onid_asignaChanging(value);
					this.SendPropertyChanging();
					this._id_asigna = value;
					this.SendPropertyChanged("id_asigna");
					this.Onid_asignaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", DbType="Int NOT NULL")]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ruta", DbType="Int NOT NULL")]
		public int id_ruta
		{
			get
			{
				return this._id_ruta;
			}
			set
			{
				if ((this._id_ruta != value))
				{
					if (this._ruta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rutaChanging(value);
					this.SendPropertyChanging();
					this._id_ruta = value;
					this.SendPropertyChanged("id_ruta");
					this.Onid_rutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ruta_asigna_ruta_user", Storage="_ruta", ThisKey="id_ruta", OtherKey="id_ruta", IsForeignKey=true)]
		public ruta ruta
		{
			get
			{
				return this._ruta.Entity;
			}
			set
			{
				ruta previousValue = this._ruta.Entity;
				if (((previousValue != value) 
							|| (this._ruta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ruta.Entity = null;
						previousValue.asigna_ruta_users.Remove(this);
					}
					this._ruta.Entity = value;
					if ((value != null))
					{
						value.asigna_ruta_users.Add(this);
						this._id_ruta = value.id_ruta;
					}
					else
					{
						this._id_ruta = default(int);
					}
					this.SendPropertyChanged("ruta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_asigna_ruta_user", Storage="_usuario", ThisKey="id_usuario", OtherKey="id_usuario", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.asigna_ruta_users.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.asigna_ruta_users.Add(this);
						this._id_usuario = value.id_usuario;
					}
					else
					{
						this._id_usuario = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.calles")]
	public partial class calle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_calle;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private int _id_ciudad;
		
		private int _id_colonia;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<direccione> _direcciones;
		
		private EntitySet<repartidor> _repartidors;
		
		private EntityRef<zona> _zona;
		
		private EntityRef<ciudade> _ciudade;
		
		private EntityRef<colonia> _colonia;
		
		private EntityRef<estado> _estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_calleChanging(int value);
    partial void Onid_calleChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onid_coloniaChanging(int value);
    partial void Onid_coloniaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public calle()
		{
			this._direcciones = new EntitySet<direccione>(new Action<direccione>(this.attach_direcciones), new Action<direccione>(this.detach_direcciones));
			this._repartidors = new EntitySet<repartidor>(new Action<repartidor>(this.attach_repartidors), new Action<repartidor>(this.detach_repartidors));
			this._zona = default(EntityRef<zona>);
			this._ciudade = default(EntityRef<ciudade>);
			this._colonia = default(EntityRef<colonia>);
			this._estado = default(EntityRef<estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_calle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_calle
		{
			get
			{
				return this._id_calle;
			}
			set
			{
				if ((this._id_calle != value))
				{
					this.Onid_calleChanging(value);
					this.SendPropertyChanging();
					this._id_calle = value;
					this.SendPropertyChanged("id_calle");
					this.Onid_calleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._ciudade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_colonia", DbType="Int NOT NULL")]
		public int id_colonia
		{
			get
			{
				return this._id_colonia;
			}
			set
			{
				if ((this._id_colonia != value))
				{
					if (this._colonia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_coloniaChanging(value);
					this.SendPropertyChanging();
					this._id_colonia = value;
					this.SendPropertyChanged("id_colonia");
					this.Onid_coloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="calle_direccione", Storage="_direcciones", ThisKey="id_calle", OtherKey="id_calle")]
		public EntitySet<direccione> direcciones
		{
			get
			{
				return this._direcciones;
			}
			set
			{
				this._direcciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="calle_repartidor", Storage="_repartidors", ThisKey="id_calle", OtherKey="id_calle")]
		public EntitySet<repartidor> repartidors
		{
			get
			{
				return this._repartidors;
			}
			set
			{
				this._repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_calle", Storage="_zona", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zona zona
		{
			get
			{
				return this._zona.Entity;
			}
			set
			{
				zona previousValue = this._zona.Entity;
				if (((previousValue != value) 
							|| (this._zona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zona.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._zona.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_calle", Storage="_ciudade", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudade ciudade
		{
			get
			{
				return this._ciudade.Entity;
			}
			set
			{
				ciudade previousValue = this._ciudade.Entity;
				if (((previousValue != value) 
							|| (this._ciudade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudade.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._ciudade.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("ciudade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonia_calle", Storage="_colonia", ThisKey="id_colonia", OtherKey="id_colonia", IsForeignKey=true)]
		public colonia colonia
		{
			get
			{
				return this._colonia.Entity;
			}
			set
			{
				colonia previousValue = this._colonia.Entity;
				if (((previousValue != value) 
							|| (this._colonia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colonia.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._colonia.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_colonia = value.id_colonia;
					}
					else
					{
						this._id_colonia = default(int);
					}
					this.SendPropertyChanged("colonia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_calle", Storage="_estado", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estado estado
		{
			get
			{
				return this._estado.Entity;
			}
			set
			{
				estado previousValue = this._estado.Entity;
				if (((previousValue != value) 
							|| (this._estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado.Entity = null;
						previousValue.calles.Remove(this);
					}
					this._estado.Entity = value;
					if ((value != null))
					{
						value.calles.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.calle = this;
		}
		
		private void detach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.calle = null;
		}
		
		private void attach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.calle = this;
		}
		
		private void detach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.calle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ciudades")]
	public partial class ciudade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ciudad;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<calle> _calles;
		
		private EntitySet<colonia> _colonias;
		
		private EntitySet<direccione> _direcciones;
		
		private EntitySet<repartidor> _repartidors;
		
		private EntityRef<zona> _zona;
		
		private EntityRef<estado> _estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public ciudade()
		{
			this._calles = new EntitySet<calle>(new Action<calle>(this.attach_calles), new Action<calle>(this.detach_calles));
			this._colonias = new EntitySet<colonia>(new Action<colonia>(this.attach_colonias), new Action<colonia>(this.detach_colonias));
			this._direcciones = new EntitySet<direccione>(new Action<direccione>(this.attach_direcciones), new Action<direccione>(this.detach_direcciones));
			this._repartidors = new EntitySet<repartidor>(new Action<repartidor>(this.attach_repartidors), new Action<repartidor>(this.detach_repartidors));
			this._zona = default(EntityRef<zona>);
			this._estado = default(EntityRef<estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_calle", Storage="_calles", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<calle> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_colonia", Storage="_colonias", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<colonia> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_direccione", Storage="_direcciones", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<direccione> direcciones
		{
			get
			{
				return this._direcciones;
			}
			set
			{
				this._direcciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_repartidor", Storage="_repartidors", ThisKey="id_ciudad", OtherKey="id_ciudad")]
		public EntitySet<repartidor> repartidors
		{
			get
			{
				return this._repartidors;
			}
			set
			{
				this._repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_ciudade", Storage="_zona", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zona zona
		{
			get
			{
				return this._zona.Entity;
			}
			set
			{
				zona previousValue = this._zona.Entity;
				if (((previousValue != value) 
							|| (this._zona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zona.Entity = null;
						previousValue.ciudades.Remove(this);
					}
					this._zona.Entity = value;
					if ((value != null))
					{
						value.ciudades.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_ciudade", Storage="_estado", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estado estado
		{
			get
			{
				return this._estado.Entity;
			}
			set
			{
				estado previousValue = this._estado.Entity;
				if (((previousValue != value) 
							|| (this._estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado.Entity = null;
						previousValue.ciudades.Remove(this);
					}
					this._estado.Entity = value;
					if ((value != null))
					{
						value.ciudades.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = this;
		}
		
		private void detach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = null;
		}
		
		private void attach_colonias(colonia entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = this;
		}
		
		private void detach_colonias(colonia entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = null;
		}
		
		private void attach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = this;
		}
		
		private void detach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = null;
		}
		
		private void attach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = this;
		}
		
		private void detach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.ciudade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.clientes")]
	public partial class cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_cliente;
		
		private string _nombre;
		
		private string _telefono;
		
		private string _celular;
		
		private string _origen;
		
		private System.DateTime _fecha_registro;
		
		private string _username;
		
		private string _passwords;
		
		private string _token;
		
		private bool _isActive;
		
		private bool _userisonline;
		
		private System.Nullable<System.DateTime> _ultimo_acceso;
		
		private bool _status;
		
		private int _id_tipo_cliente;
		
		private EntitySet<direccione> _direcciones;
		
		private EntitySet<pedido> _pedidos;
		
		private EntityRef<tipo_cliente> _tipo_cliente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_clienteChanging(int value);
    partial void Onid_clienteChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OnorigenChanging(string value);
    partial void OnorigenChanged();
    partial void Onfecha_registroChanging(System.DateTime value);
    partial void Onfecha_registroChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordsChanging(string value);
    partial void OnpasswordsChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnuserisonlineChanging(bool value);
    partial void OnuserisonlineChanged();
    partial void Onultimo_accesoChanging(System.Nullable<System.DateTime> value);
    partial void Onultimo_accesoChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void Onid_tipo_clienteChanging(int value);
    partial void Onid_tipo_clienteChanged();
    #endregion
		
		public cliente()
		{
			this._direcciones = new EntitySet<direccione>(new Action<direccione>(this.attach_direcciones), new Action<direccione>(this.detach_direcciones));
			this._pedidos = new EntitySet<pedido>(new Action<pedido>(this.attach_pedidos), new Action<pedido>(this.detach_pedidos));
			this._tipo_cliente = default(EntityRef<tipo_cliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cliente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_cliente
		{
			get
			{
				return this._id_cliente;
			}
			set
			{
				if ((this._id_cliente != value))
				{
					this.Onid_clienteChanging(value);
					this.SendPropertyChanging();
					this._id_cliente = value;
					this.SendPropertyChanged("id_cliente");
					this.Onid_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(30)")]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origen", DbType="VarChar(3)")]
		public string origen
		{
			get
			{
				return this._origen;
			}
			set
			{
				if ((this._origen != value))
				{
					this.OnorigenChanging(value);
					this.SendPropertyChanging();
					this._origen = value;
					this.SendPropertyChanged("origen");
					this.OnorigenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_registro", DbType="Date NOT NULL")]
		public System.DateTime fecha_registro
		{
			get
			{
				return this._fecha_registro;
			}
			set
			{
				if ((this._fecha_registro != value))
				{
					this.Onfecha_registroChanging(value);
					this.SendPropertyChanging();
					this._fecha_registro = value;
					this.SendPropertyChanged("fecha_registro");
					this.Onfecha_registroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwords", DbType="VarChar(30)")]
		public string passwords
		{
			get
			{
				return this._passwords;
			}
			set
			{
				if ((this._passwords != value))
				{
					this.OnpasswordsChanging(value);
					this.SendPropertyChanging();
					this._passwords = value;
					this.SendPropertyChanged("passwords");
					this.OnpasswordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userisonline", DbType="Bit NOT NULL")]
		public bool userisonline
		{
			get
			{
				return this._userisonline;
			}
			set
			{
				if ((this._userisonline != value))
				{
					this.OnuserisonlineChanging(value);
					this.SendPropertyChanging();
					this._userisonline = value;
					this.SendPropertyChanged("userisonline");
					this.OnuserisonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ultimo_acceso", DbType="Date")]
		public System.Nullable<System.DateTime> ultimo_acceso
		{
			get
			{
				return this._ultimo_acceso;
			}
			set
			{
				if ((this._ultimo_acceso != value))
				{
					this.Onultimo_accesoChanging(value);
					this.SendPropertyChanging();
					this._ultimo_acceso = value;
					this.SendPropertyChanged("ultimo_acceso");
					this.Onultimo_accesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo_cliente", DbType="Int NOT NULL")]
		public int id_tipo_cliente
		{
			get
			{
				return this._id_tipo_cliente;
			}
			set
			{
				if ((this._id_tipo_cliente != value))
				{
					if (this._tipo_cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipo_clienteChanging(value);
					this.SendPropertyChanging();
					this._id_tipo_cliente = value;
					this.SendPropertyChanged("id_tipo_cliente");
					this.Onid_tipo_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_direccione", Storage="_direcciones", ThisKey="id_cliente", OtherKey="id_cliente")]
		public EntitySet<direccione> direcciones
		{
			get
			{
				return this._direcciones;
			}
			set
			{
				this._direcciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_pedido", Storage="_pedidos", ThisKey="id_cliente", OtherKey="id_cliente")]
		public EntitySet<pedido> pedidos
		{
			get
			{
				return this._pedidos;
			}
			set
			{
				this._pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_cliente_cliente", Storage="_tipo_cliente", ThisKey="id_tipo_cliente", OtherKey="id_tipo", IsForeignKey=true)]
		public tipo_cliente tipo_cliente
		{
			get
			{
				return this._tipo_cliente.Entity;
			}
			set
			{
				tipo_cliente previousValue = this._tipo_cliente.Entity;
				if (((previousValue != value) 
							|| (this._tipo_cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_cliente.Entity = null;
						previousValue.clientes.Remove(this);
					}
					this._tipo_cliente.Entity = value;
					if ((value != null))
					{
						value.clientes.Add(this);
						this._id_tipo_cliente = value.id_tipo;
					}
					else
					{
						this._id_tipo_cliente = default(int);
					}
					this.SendPropertyChanged("tipo_cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
		
		private void attach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.colonias")]
	public partial class colonia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_colonia;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private int _id_ciudad;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<calle> _calles;
		
		private EntitySet<direccione> _direcciones;
		
		private EntitySet<repartidor> _repartidors;
		
		private EntityRef<ciudade> _ciudade;
		
		private EntityRef<zona> _zona;
		
		private EntityRef<estado> _estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_coloniaChanging(int value);
    partial void Onid_coloniaChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public colonia()
		{
			this._calles = new EntitySet<calle>(new Action<calle>(this.attach_calles), new Action<calle>(this.detach_calles));
			this._direcciones = new EntitySet<direccione>(new Action<direccione>(this.attach_direcciones), new Action<direccione>(this.detach_direcciones));
			this._repartidors = new EntitySet<repartidor>(new Action<repartidor>(this.attach_repartidors), new Action<repartidor>(this.detach_repartidors));
			this._ciudade = default(EntityRef<ciudade>);
			this._zona = default(EntityRef<zona>);
			this._estado = default(EntityRef<estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_colonia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_colonia
		{
			get
			{
				return this._id_colonia;
			}
			set
			{
				if ((this._id_colonia != value))
				{
					this.Onid_coloniaChanging(value);
					this.SendPropertyChanging();
					this._id_colonia = value;
					this.SendPropertyChanged("id_colonia");
					this.Onid_coloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._ciudade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonia_calle", Storage="_calles", ThisKey="id_colonia", OtherKey="id_colonia")]
		public EntitySet<calle> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonia_direccione", Storage="_direcciones", ThisKey="id_colonia", OtherKey="id_colonia")]
		public EntitySet<direccione> direcciones
		{
			get
			{
				return this._direcciones;
			}
			set
			{
				this._direcciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonia_repartidor", Storage="_repartidors", ThisKey="id_colonia", OtherKey="id_colonia")]
		public EntitySet<repartidor> repartidors
		{
			get
			{
				return this._repartidors;
			}
			set
			{
				this._repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_colonia", Storage="_ciudade", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudade ciudade
		{
			get
			{
				return this._ciudade.Entity;
			}
			set
			{
				ciudade previousValue = this._ciudade.Entity;
				if (((previousValue != value) 
							|| (this._ciudade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudade.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._ciudade.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("ciudade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_colonia", Storage="_zona", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zona zona
		{
			get
			{
				return this._zona.Entity;
			}
			set
			{
				zona previousValue = this._zona.Entity;
				if (((previousValue != value) 
							|| (this._zona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zona.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._zona.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_colonia", Storage="_estado", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estado estado
		{
			get
			{
				return this._estado.Entity;
			}
			set
			{
				estado previousValue = this._estado.Entity;
				if (((previousValue != value) 
							|| (this._estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado.Entity = null;
						previousValue.colonias.Remove(this);
					}
					this._estado.Entity = value;
					if ((value != null))
					{
						value.colonias.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.colonia = this;
		}
		
		private void detach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.colonia = null;
		}
		
		private void attach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.colonia = this;
		}
		
		private void detach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.colonia = null;
		}
		
		private void attach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.colonia = this;
		}
		
		private void detach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.colonia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.direcciones")]
	public partial class direccione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_direccion;
		
		private int _id_cliente;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private int _id_ciudad;
		
		private int _id_colonia;
		
		private int _id_calle;
		
		private System.Nullable<int> _num_int;
		
		private System.Nullable<int> _num_ext;
		
		private string _entre1;
		
		private string _entre2;
		
		private string _referencia;
		
		private bool _status;
		
		private EntitySet<pedido> _pedidos;
		
		private EntityRef<calle> _calle;
		
		private EntityRef<ciudade> _ciudade;
		
		private EntityRef<cliente> _cliente;
		
		private EntityRef<colonia> _colonia;
		
		private EntityRef<zona> _zona;
		
		private EntityRef<estado> _estado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_direccionChanging(int value);
    partial void Onid_direccionChanged();
    partial void Onid_clienteChanging(int value);
    partial void Onid_clienteChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void Onid_ciudadChanging(int value);
    partial void Onid_ciudadChanged();
    partial void Onid_coloniaChanging(int value);
    partial void Onid_coloniaChanged();
    partial void Onid_calleChanging(int value);
    partial void Onid_calleChanged();
    partial void Onnum_intChanging(System.Nullable<int> value);
    partial void Onnum_intChanged();
    partial void Onnum_extChanging(System.Nullable<int> value);
    partial void Onnum_extChanged();
    partial void Onentre1Changing(string value);
    partial void Onentre1Changed();
    partial void Onentre2Changing(string value);
    partial void Onentre2Changed();
    partial void OnreferenciaChanging(string value);
    partial void OnreferenciaChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public direccione()
		{
			this._pedidos = new EntitySet<pedido>(new Action<pedido>(this.attach_pedidos), new Action<pedido>(this.detach_pedidos));
			this._calle = default(EntityRef<calle>);
			this._ciudade = default(EntityRef<ciudade>);
			this._cliente = default(EntityRef<cliente>);
			this._colonia = default(EntityRef<colonia>);
			this._zona = default(EntityRef<zona>);
			this._estado = default(EntityRef<estado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_direccion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_direccion
		{
			get
			{
				return this._id_direccion;
			}
			set
			{
				if ((this._id_direccion != value))
				{
					this.Onid_direccionChanging(value);
					this.SendPropertyChanging();
					this._id_direccion = value;
					this.SendPropertyChanged("id_direccion");
					this.Onid_direccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cliente", DbType="Int NOT NULL")]
		public int id_cliente
		{
			get
			{
				return this._id_cliente;
			}
			set
			{
				if ((this._id_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clienteChanging(value);
					this.SendPropertyChanging();
					this._id_cliente = value;
					this.SendPropertyChanged("id_cliente");
					this.Onid_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int NOT NULL")]
		public int id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._ciudade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_colonia", DbType="Int NOT NULL")]
		public int id_colonia
		{
			get
			{
				return this._id_colonia;
			}
			set
			{
				if ((this._id_colonia != value))
				{
					if (this._colonia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_coloniaChanging(value);
					this.SendPropertyChanging();
					this._id_colonia = value;
					this.SendPropertyChanged("id_colonia");
					this.Onid_coloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_calle", DbType="Int NOT NULL")]
		public int id_calle
		{
			get
			{
				return this._id_calle;
			}
			set
			{
				if ((this._id_calle != value))
				{
					if (this._calle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_calleChanging(value);
					this.SendPropertyChanging();
					this._id_calle = value;
					this.SendPropertyChanged("id_calle");
					this.Onid_calleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_int", DbType="Int")]
		public System.Nullable<int> num_int
		{
			get
			{
				return this._num_int;
			}
			set
			{
				if ((this._num_int != value))
				{
					this.Onnum_intChanging(value);
					this.SendPropertyChanging();
					this._num_int = value;
					this.SendPropertyChanged("num_int");
					this.Onnum_intChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_ext", DbType="Int")]
		public System.Nullable<int> num_ext
		{
			get
			{
				return this._num_ext;
			}
			set
			{
				if ((this._num_ext != value))
				{
					this.Onnum_extChanging(value);
					this.SendPropertyChanging();
					this._num_ext = value;
					this.SendPropertyChanged("num_ext");
					this.Onnum_extChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entre1", DbType="VarChar(200)")]
		public string entre1
		{
			get
			{
				return this._entre1;
			}
			set
			{
				if ((this._entre1 != value))
				{
					this.Onentre1Changing(value);
					this.SendPropertyChanging();
					this._entre1 = value;
					this.SendPropertyChanged("entre1");
					this.Onentre1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entre2", DbType="VarChar(200)")]
		public string entre2
		{
			get
			{
				return this._entre2;
			}
			set
			{
				if ((this._entre2 != value))
				{
					this.Onentre2Changing(value);
					this.SendPropertyChanging();
					this._entre2 = value;
					this.SendPropertyChanged("entre2");
					this.Onentre2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referencia", DbType="VarChar(600)")]
		public string referencia
		{
			get
			{
				return this._referencia;
			}
			set
			{
				if ((this._referencia != value))
				{
					this.OnreferenciaChanging(value);
					this.SendPropertyChanging();
					this._referencia = value;
					this.SendPropertyChanged("referencia");
					this.OnreferenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="direccione_pedido", Storage="_pedidos", ThisKey="id_direccion", OtherKey="id_direccion")]
		public EntitySet<pedido> pedidos
		{
			get
			{
				return this._pedidos;
			}
			set
			{
				this._pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="calle_direccione", Storage="_calle", ThisKey="id_calle", OtherKey="id_calle", IsForeignKey=true)]
		public calle calle
		{
			get
			{
				return this._calle.Entity;
			}
			set
			{
				calle previousValue = this._calle.Entity;
				if (((previousValue != value) 
							|| (this._calle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._calle.Entity = null;
						previousValue.direcciones.Remove(this);
					}
					this._calle.Entity = value;
					if ((value != null))
					{
						value.direcciones.Add(this);
						this._id_calle = value.id_calle;
					}
					else
					{
						this._id_calle = default(int);
					}
					this.SendPropertyChanged("calle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_direccione", Storage="_ciudade", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudade ciudade
		{
			get
			{
				return this._ciudade.Entity;
			}
			set
			{
				ciudade previousValue = this._ciudade.Entity;
				if (((previousValue != value) 
							|| (this._ciudade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudade.Entity = null;
						previousValue.direcciones.Remove(this);
					}
					this._ciudade.Entity = value;
					if ((value != null))
					{
						value.direcciones.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(int);
					}
					this.SendPropertyChanged("ciudade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_direccione", Storage="_cliente", ThisKey="id_cliente", OtherKey="id_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.direcciones.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.direcciones.Add(this);
						this._id_cliente = value.id_cliente;
					}
					else
					{
						this._id_cliente = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonia_direccione", Storage="_colonia", ThisKey="id_colonia", OtherKey="id_colonia", IsForeignKey=true)]
		public colonia colonia
		{
			get
			{
				return this._colonia.Entity;
			}
			set
			{
				colonia previousValue = this._colonia.Entity;
				if (((previousValue != value) 
							|| (this._colonia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colonia.Entity = null;
						previousValue.direcciones.Remove(this);
					}
					this._colonia.Entity = value;
					if ((value != null))
					{
						value.direcciones.Add(this);
						this._id_colonia = value.id_colonia;
					}
					else
					{
						this._id_colonia = default(int);
					}
					this.SendPropertyChanged("colonia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_direccione", Storage="_zona", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zona zona
		{
			get
			{
				return this._zona.Entity;
			}
			set
			{
				zona previousValue = this._zona.Entity;
				if (((previousValue != value) 
							|| (this._zona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zona.Entity = null;
						previousValue.direcciones.Remove(this);
					}
					this._zona.Entity = value;
					if ((value != null))
					{
						value.direcciones.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_direccione", Storage="_estado", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estado estado
		{
			get
			{
				return this._estado.Entity;
			}
			set
			{
				estado previousValue = this._estado.Entity;
				if (((previousValue != value) 
							|| (this._estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado.Entity = null;
						previousValue.direcciones.Remove(this);
					}
					this._estado.Entity = value;
					if ((value != null))
					{
						value.direcciones.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.direccione = this;
		}
		
		private void detach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.direccione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.estados")]
	public partial class estado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_estado;
		
		private int _id_zona;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<calle> _calles;
		
		private EntitySet<ciudade> _ciudades;
		
		private EntitySet<colonia> _colonias;
		
		private EntitySet<direccione> _direcciones;
		
		private EntitySet<repartidor> _repartidors;
		
		private EntitySet<ruta> _rutas;
		
		private EntityRef<zona> _zona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public estado()
		{
			this._calles = new EntitySet<calle>(new Action<calle>(this.attach_calles), new Action<calle>(this.detach_calles));
			this._ciudades = new EntitySet<ciudade>(new Action<ciudade>(this.attach_ciudades), new Action<ciudade>(this.detach_ciudades));
			this._colonias = new EntitySet<colonia>(new Action<colonia>(this.attach_colonias), new Action<colonia>(this.detach_colonias));
			this._direcciones = new EntitySet<direccione>(new Action<direccione>(this.attach_direcciones), new Action<direccione>(this.detach_direcciones));
			this._repartidors = new EntitySet<repartidor>(new Action<repartidor>(this.attach_repartidors), new Action<repartidor>(this.detach_repartidors));
			this._rutas = new EntitySet<ruta>(new Action<ruta>(this.attach_rutas), new Action<ruta>(this.detach_rutas));
			this._zona = default(EntityRef<zona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_calle", Storage="_calles", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<calle> calles
		{
			get
			{
				return this._calles;
			}
			set
			{
				this._calles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_ciudade", Storage="_ciudades", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<ciudade> ciudades
		{
			get
			{
				return this._ciudades;
			}
			set
			{
				this._ciudades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_colonia", Storage="_colonias", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<colonia> colonias
		{
			get
			{
				return this._colonias;
			}
			set
			{
				this._colonias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_direccione", Storage="_direcciones", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<direccione> direcciones
		{
			get
			{
				return this._direcciones;
			}
			set
			{
				this._direcciones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_repartidor", Storage="_repartidors", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<repartidor> repartidors
		{
			get
			{
				return this._repartidors;
			}
			set
			{
				this._repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_ruta", Storage="_rutas", ThisKey="id_estado", OtherKey="id_estado")]
		public EntitySet<ruta> rutas
		{
			get
			{
				return this._rutas;
			}
			set
			{
				this._rutas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_estado", Storage="_zona", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zona zona
		{
			get
			{
				return this._zona.Entity;
			}
			set
			{
				zona previousValue = this._zona.Entity;
				if (((previousValue != value) 
							|| (this._zona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zona.Entity = null;
						previousValue.estados.Remove(this);
					}
					this._zona.Entity = value;
					if ((value != null))
					{
						value.estados.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.estado = this;
		}
		
		private void detach_calles(calle entity)
		{
			this.SendPropertyChanging();
			entity.estado = null;
		}
		
		private void attach_ciudades(ciudade entity)
		{
			this.SendPropertyChanging();
			entity.estado = this;
		}
		
		private void detach_ciudades(ciudade entity)
		{
			this.SendPropertyChanging();
			entity.estado = null;
		}
		
		private void attach_colonias(colonia entity)
		{
			this.SendPropertyChanging();
			entity.estado = this;
		}
		
		private void detach_colonias(colonia entity)
		{
			this.SendPropertyChanging();
			entity.estado = null;
		}
		
		private void attach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.estado = this;
		}
		
		private void detach_direcciones(direccione entity)
		{
			this.SendPropertyChanging();
			entity.estado = null;
		}
		
		private void attach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.estado = this;
		}
		
		private void detach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.estado = null;
		}
		
		private void attach_rutas(ruta entity)
		{
			this.SendPropertyChanging();
			entity.estado = this;
		}
		
		private void detach_rutas(ruta entity)
		{
			this.SendPropertyChanging();
			entity.estado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.formas_pago")]
	public partial class formas_pago : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_formas_pago;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<pedido> _pedidos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_formas_pagoChanging(int value);
    partial void Onid_formas_pagoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public formas_pago()
		{
			this._pedidos = new EntitySet<pedido>(new Action<pedido>(this.attach_pedidos), new Action<pedido>(this.detach_pedidos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_formas_pago", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_formas_pago
		{
			get
			{
				return this._id_formas_pago;
			}
			set
			{
				if ((this._id_formas_pago != value))
				{
					this.Onid_formas_pagoChanging(value);
					this.SendPropertyChanging();
					this._id_formas_pago = value;
					this.SendPropertyChanged("id_formas_pago");
					this.Onid_formas_pagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="formas_pago_pedido", Storage="_pedidos", ThisKey="id_formas_pago", OtherKey="id_formas_pagos")]
		public EntitySet<pedido> pedidos
		{
			get
			{
				return this._pedidos;
			}
			set
			{
				this._pedidos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.formas_pago = this;
		}
		
		private void detach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.formas_pago = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.modulos")]
	public partial class modulo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_modulo;
		
		private string _titulo;
		
		private string _url_modulo;
		
		private System.Nullable<bool> _isactive;
		
		private int _id_modulo_padre;
		
		private string _descripcion;
		
		private EntitySet<permiso> _permisos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_moduloChanging(int value);
    partial void Onid_moduloChanged();
    partial void OntituloChanging(string value);
    partial void OntituloChanged();
    partial void Onurl_moduloChanging(string value);
    partial void Onurl_moduloChanged();
    partial void OnisactiveChanging(System.Nullable<bool> value);
    partial void OnisactiveChanged();
    partial void Onid_modulo_padreChanging(int value);
    partial void Onid_modulo_padreChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    #endregion
		
		public modulo()
		{
			this._permisos = new EntitySet<permiso>(new Action<permiso>(this.attach_permisos), new Action<permiso>(this.detach_permisos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modulo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_modulo
		{
			get
			{
				return this._id_modulo;
			}
			set
			{
				if ((this._id_modulo != value))
				{
					this.Onid_moduloChanging(value);
					this.SendPropertyChanging();
					this._id_modulo = value;
					this.SendPropertyChanged("id_modulo");
					this.Onid_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titulo", DbType="NChar(50)")]
		public string titulo
		{
			get
			{
				return this._titulo;
			}
			set
			{
				if ((this._titulo != value))
				{
					this.OntituloChanging(value);
					this.SendPropertyChanging();
					this._titulo = value;
					this.SendPropertyChanged("titulo");
					this.OntituloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url_modulo", DbType="NChar(100)")]
		public string url_modulo
		{
			get
			{
				return this._url_modulo;
			}
			set
			{
				if ((this._url_modulo != value))
				{
					this.Onurl_moduloChanging(value);
					this.SendPropertyChanging();
					this._url_modulo = value;
					this.SendPropertyChanged("url_modulo");
					this.Onurl_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="Bit")]
		public System.Nullable<bool> isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modulo_padre", DbType="Int NOT NULL")]
		public int id_modulo_padre
		{
			get
			{
				return this._id_modulo_padre;
			}
			set
			{
				if ((this._id_modulo_padre != value))
				{
					this.Onid_modulo_padreChanging(value);
					this.SendPropertyChanging();
					this._id_modulo_padre = value;
					this.SendPropertyChanged("id_modulo_padre");
					this.Onid_modulo_padreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="NVarChar(100)")]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="modulo_permiso", Storage="_permisos", ThisKey="id_modulo", OtherKey="id_modulo")]
		public EntitySet<permiso> permisos
		{
			get
			{
				return this._permisos;
			}
			set
			{
				this._permisos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_permisos(permiso entity)
		{
			this.SendPropertyChanging();
			entity.modulo = this;
		}
		
		private void detach_permisos(permiso entity)
		{
			this.SendPropertyChanging();
			entity.modulo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pedidos")]
	public partial class pedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pedido;
		
		private int _id_direccion;
		
		private int _id_cliente;
		
		private int _id_formas_pagos;
		
		private System.DateTime _fecha_pedido;
		
		private System.TimeSpan _hora_pedido;
		
		private int _id_usuario;
		
		private bool _radios;
		
		private bool _confirmado;
		
		private System.Nullable<bool> _istomorrow;
		
		private bool _status;
		
		private System.Nullable<bool> _cancelado;
		
		private string _razonCancel;
		
		private EntitySet<pedidos_detalle> _pedidos_detalles;
		
		private EntityRef<cliente> _cliente;
		
		private EntityRef<direccione> _direccione;
		
		private EntityRef<formas_pago> _formas_pago;
		
		private EntityRef<usuario> _usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_pedidoChanging(int value);
    partial void Onid_pedidoChanged();
    partial void Onid_direccionChanging(int value);
    partial void Onid_direccionChanged();
    partial void Onid_clienteChanging(int value);
    partial void Onid_clienteChanged();
    partial void Onid_formas_pagosChanging(int value);
    partial void Onid_formas_pagosChanged();
    partial void Onfecha_pedidoChanging(System.DateTime value);
    partial void Onfecha_pedidoChanged();
    partial void Onhora_pedidoChanging(System.TimeSpan value);
    partial void Onhora_pedidoChanged();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void OnradiosChanging(bool value);
    partial void OnradiosChanged();
    partial void OnconfirmadoChanging(bool value);
    partial void OnconfirmadoChanged();
    partial void OnistomorrowChanging(System.Nullable<bool> value);
    partial void OnistomorrowChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void OncanceladoChanging(System.Nullable<bool> value);
    partial void OncanceladoChanged();
    partial void OnrazonCancelChanging(string value);
    partial void OnrazonCancelChanged();
    #endregion
		
		public pedido()
		{
			this._pedidos_detalles = new EntitySet<pedidos_detalle>(new Action<pedidos_detalle>(this.attach_pedidos_detalles), new Action<pedidos_detalle>(this.detach_pedidos_detalles));
			this._cliente = default(EntityRef<cliente>);
			this._direccione = default(EntityRef<direccione>);
			this._formas_pago = default(EntityRef<formas_pago>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pedido", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_pedido
		{
			get
			{
				return this._id_pedido;
			}
			set
			{
				if ((this._id_pedido != value))
				{
					this.Onid_pedidoChanging(value);
					this.SendPropertyChanging();
					this._id_pedido = value;
					this.SendPropertyChanged("id_pedido");
					this.Onid_pedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_direccion", DbType="Int NOT NULL")]
		public int id_direccion
		{
			get
			{
				return this._id_direccion;
			}
			set
			{
				if ((this._id_direccion != value))
				{
					if (this._direccione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_direccionChanging(value);
					this.SendPropertyChanging();
					this._id_direccion = value;
					this.SendPropertyChanged("id_direccion");
					this.Onid_direccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_cliente", DbType="Int NOT NULL")]
		public int id_cliente
		{
			get
			{
				return this._id_cliente;
			}
			set
			{
				if ((this._id_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clienteChanging(value);
					this.SendPropertyChanging();
					this._id_cliente = value;
					this.SendPropertyChanged("id_cliente");
					this.Onid_clienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_formas_pagos", DbType="Int NOT NULL")]
		public int id_formas_pagos
		{
			get
			{
				return this._id_formas_pagos;
			}
			set
			{
				if ((this._id_formas_pagos != value))
				{
					if (this._formas_pago.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_formas_pagosChanging(value);
					this.SendPropertyChanging();
					this._id_formas_pagos = value;
					this.SendPropertyChanged("id_formas_pagos");
					this.Onid_formas_pagosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_pedido", DbType="Date NOT NULL")]
		public System.DateTime fecha_pedido
		{
			get
			{
				return this._fecha_pedido;
			}
			set
			{
				if ((this._fecha_pedido != value))
				{
					this.Onfecha_pedidoChanging(value);
					this.SendPropertyChanging();
					this._fecha_pedido = value;
					this.SendPropertyChanged("fecha_pedido");
					this.Onfecha_pedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora_pedido", DbType="Time NOT NULL")]
		public System.TimeSpan hora_pedido
		{
			get
			{
				return this._hora_pedido;
			}
			set
			{
				if ((this._hora_pedido != value))
				{
					this.Onhora_pedidoChanging(value);
					this.SendPropertyChanging();
					this._hora_pedido = value;
					this.SendPropertyChanged("hora_pedido");
					this.Onhora_pedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", DbType="Int NOT NULL")]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radios", DbType="Bit NOT NULL")]
		public bool radios
		{
			get
			{
				return this._radios;
			}
			set
			{
				if ((this._radios != value))
				{
					this.OnradiosChanging(value);
					this.SendPropertyChanging();
					this._radios = value;
					this.SendPropertyChanged("radios");
					this.OnradiosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmado", DbType="Bit NOT NULL")]
		public bool confirmado
		{
			get
			{
				return this._confirmado;
			}
			set
			{
				if ((this._confirmado != value))
				{
					this.OnconfirmadoChanging(value);
					this.SendPropertyChanging();
					this._confirmado = value;
					this.SendPropertyChanged("confirmado");
					this.OnconfirmadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_istomorrow", DbType="Bit")]
		public System.Nullable<bool> istomorrow
		{
			get
			{
				return this._istomorrow;
			}
			set
			{
				if ((this._istomorrow != value))
				{
					this.OnistomorrowChanging(value);
					this.SendPropertyChanging();
					this._istomorrow = value;
					this.SendPropertyChanged("istomorrow");
					this.OnistomorrowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cancelado", DbType="Bit")]
		public System.Nullable<bool> cancelado
		{
			get
			{
				return this._cancelado;
			}
			set
			{
				if ((this._cancelado != value))
				{
					this.OncanceladoChanging(value);
					this.SendPropertyChanging();
					this._cancelado = value;
					this.SendPropertyChanged("cancelado");
					this.OncanceladoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_razonCancel", DbType="VarChar(700)")]
		public string razonCancel
		{
			get
			{
				return this._razonCancel;
			}
			set
			{
				if ((this._razonCancel != value))
				{
					this.OnrazonCancelChanging(value);
					this.SendPropertyChanging();
					this._razonCancel = value;
					this.SendPropertyChanged("razonCancel");
					this.OnrazonCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pedido_pedidos_detalle", Storage="_pedidos_detalles", ThisKey="id_pedido", OtherKey="id_pedido")]
		public EntitySet<pedidos_detalle> pedidos_detalles
		{
			get
			{
				return this._pedidos_detalles;
			}
			set
			{
				this._pedidos_detalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cliente_pedido", Storage="_cliente", ThisKey="id_cliente", OtherKey="id_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.pedidos.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.pedidos.Add(this);
						this._id_cliente = value.id_cliente;
					}
					else
					{
						this._id_cliente = default(int);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="direccione_pedido", Storage="_direccione", ThisKey="id_direccion", OtherKey="id_direccion", IsForeignKey=true)]
		public direccione direccione
		{
			get
			{
				return this._direccione.Entity;
			}
			set
			{
				direccione previousValue = this._direccione.Entity;
				if (((previousValue != value) 
							|| (this._direccione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._direccione.Entity = null;
						previousValue.pedidos.Remove(this);
					}
					this._direccione.Entity = value;
					if ((value != null))
					{
						value.pedidos.Add(this);
						this._id_direccion = value.id_direccion;
					}
					else
					{
						this._id_direccion = default(int);
					}
					this.SendPropertyChanged("direccione");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="formas_pago_pedido", Storage="_formas_pago", ThisKey="id_formas_pagos", OtherKey="id_formas_pago", IsForeignKey=true)]
		public formas_pago formas_pago
		{
			get
			{
				return this._formas_pago.Entity;
			}
			set
			{
				formas_pago previousValue = this._formas_pago.Entity;
				if (((previousValue != value) 
							|| (this._formas_pago.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._formas_pago.Entity = null;
						previousValue.pedidos.Remove(this);
					}
					this._formas_pago.Entity = value;
					if ((value != null))
					{
						value.pedidos.Add(this);
						this._id_formas_pagos = value.id_formas_pago;
					}
					else
					{
						this._id_formas_pagos = default(int);
					}
					this.SendPropertyChanged("formas_pago");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_pedido", Storage="_usuario", ThisKey="id_usuario", OtherKey="id_usuario", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.pedidos.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.pedidos.Add(this);
						this._id_usuario = value.id_usuario;
					}
					else
					{
						this._id_usuario = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.pedido = this;
		}
		
		private void detach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.pedido = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pedidos_detalle")]
	public partial class pedidos_detalle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_pedido_detalle;
		
		private int _id_pedido;
		
		private int _id_servicio;
		
		private System.Nullable<int> _cilindros;
		
		private System.Nullable<int> _id_unidad_venta;
		
		private decimal _total;
		
		private System.Nullable<int> _id_precio;
		
		private System.DateTime _fecha_pedido;
		
		private System.TimeSpan _hora_pedido;
		
		private int _id_usuario;
		
		private bool _status;
		
		private EntityRef<pedido> _pedido;
		
		private EntityRef<precio> _precio;
		
		private EntityRef<servicio> _servicio;
		
		private EntityRef<unidad_venta> _unidad_venta;
		
		private EntityRef<usuario> _usuario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_pedido_detalleChanging(int value);
    partial void Onid_pedido_detalleChanged();
    partial void Onid_pedidoChanging(int value);
    partial void Onid_pedidoChanged();
    partial void Onid_servicioChanging(int value);
    partial void Onid_servicioChanged();
    partial void OncilindrosChanging(System.Nullable<int> value);
    partial void OncilindrosChanged();
    partial void Onid_unidad_ventaChanging(System.Nullable<int> value);
    partial void Onid_unidad_ventaChanged();
    partial void OntotalChanging(decimal value);
    partial void OntotalChanged();
    partial void Onid_precioChanging(System.Nullable<int> value);
    partial void Onid_precioChanged();
    partial void Onfecha_pedidoChanging(System.DateTime value);
    partial void Onfecha_pedidoChanged();
    partial void Onhora_pedidoChanging(System.TimeSpan value);
    partial void Onhora_pedidoChanged();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public pedidos_detalle()
		{
			this._pedido = default(EntityRef<pedido>);
			this._precio = default(EntityRef<precio>);
			this._servicio = default(EntityRef<servicio>);
			this._unidad_venta = default(EntityRef<unidad_venta>);
			this._usuario = default(EntityRef<usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pedido_detalle", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_pedido_detalle
		{
			get
			{
				return this._id_pedido_detalle;
			}
			set
			{
				if ((this._id_pedido_detalle != value))
				{
					this.Onid_pedido_detalleChanging(value);
					this.SendPropertyChanging();
					this._id_pedido_detalle = value;
					this.SendPropertyChanged("id_pedido_detalle");
					this.Onid_pedido_detalleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_pedido", DbType="Int NOT NULL")]
		public int id_pedido
		{
			get
			{
				return this._id_pedido;
			}
			set
			{
				if ((this._id_pedido != value))
				{
					if (this._pedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_pedidoChanging(value);
					this.SendPropertyChanging();
					this._id_pedido = value;
					this.SendPropertyChanged("id_pedido");
					this.Onid_pedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_servicio", DbType="Int NOT NULL")]
		public int id_servicio
		{
			get
			{
				return this._id_servicio;
			}
			set
			{
				if ((this._id_servicio != value))
				{
					if (this._servicio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_servicioChanging(value);
					this.SendPropertyChanging();
					this._id_servicio = value;
					this.SendPropertyChanged("id_servicio");
					this.Onid_servicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cilindros", DbType="Int")]
		public System.Nullable<int> cilindros
		{
			get
			{
				return this._cilindros;
			}
			set
			{
				if ((this._cilindros != value))
				{
					this.OncilindrosChanging(value);
					this.SendPropertyChanging();
					this._cilindros = value;
					this.SendPropertyChanged("cilindros");
					this.OncilindrosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unidad_venta", DbType="Int")]
		public System.Nullable<int> id_unidad_venta
		{
			get
			{
				return this._id_unidad_venta;
			}
			set
			{
				if ((this._id_unidad_venta != value))
				{
					if (this._unidad_venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_unidad_ventaChanging(value);
					this.SendPropertyChanging();
					this._id_unidad_venta = value;
					this.SendPropertyChanged("id_unidad_venta");
					this.Onid_unidad_ventaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(10,2) NOT NULL")]
		public decimal total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_precio", DbType="Int")]
		public System.Nullable<int> id_precio
		{
			get
			{
				return this._id_precio;
			}
			set
			{
				if ((this._id_precio != value))
				{
					if (this._precio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_precioChanging(value);
					this.SendPropertyChanging();
					this._id_precio = value;
					this.SendPropertyChanged("id_precio");
					this.Onid_precioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha_pedido", DbType="Date NOT NULL")]
		public System.DateTime fecha_pedido
		{
			get
			{
				return this._fecha_pedido;
			}
			set
			{
				if ((this._fecha_pedido != value))
				{
					this.Onfecha_pedidoChanging(value);
					this.SendPropertyChanging();
					this._fecha_pedido = value;
					this.SendPropertyChanged("fecha_pedido");
					this.Onfecha_pedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora_pedido", DbType="Time NOT NULL")]
		public System.TimeSpan hora_pedido
		{
			get
			{
				return this._hora_pedido;
			}
			set
			{
				if ((this._hora_pedido != value))
				{
					this.Onhora_pedidoChanging(value);
					this.SendPropertyChanging();
					this._hora_pedido = value;
					this.SendPropertyChanged("hora_pedido");
					this.Onhora_pedidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", DbType="Int NOT NULL")]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="pedido_pedidos_detalle", Storage="_pedido", ThisKey="id_pedido", OtherKey="id_pedido", IsForeignKey=true)]
		public pedido pedido
		{
			get
			{
				return this._pedido.Entity;
			}
			set
			{
				pedido previousValue = this._pedido.Entity;
				if (((previousValue != value) 
							|| (this._pedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pedido.Entity = null;
						previousValue.pedidos_detalles.Remove(this);
					}
					this._pedido.Entity = value;
					if ((value != null))
					{
						value.pedidos_detalles.Add(this);
						this._id_pedido = value.id_pedido;
					}
					else
					{
						this._id_pedido = default(int);
					}
					this.SendPropertyChanged("pedido");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="precio_pedidos_detalle", Storage="_precio", ThisKey="id_precio", OtherKey="id_precio", IsForeignKey=true)]
		public precio precio
		{
			get
			{
				return this._precio.Entity;
			}
			set
			{
				precio previousValue = this._precio.Entity;
				if (((previousValue != value) 
							|| (this._precio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._precio.Entity = null;
						previousValue.pedidos_detalles.Remove(this);
					}
					this._precio.Entity = value;
					if ((value != null))
					{
						value.pedidos_detalles.Add(this);
						this._id_precio = value.id_precio;
					}
					else
					{
						this._id_precio = default(Nullable<int>);
					}
					this.SendPropertyChanged("precio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="servicio_pedidos_detalle", Storage="_servicio", ThisKey="id_servicio", OtherKey="id_servicio", IsForeignKey=true)]
		public servicio servicio
		{
			get
			{
				return this._servicio.Entity;
			}
			set
			{
				servicio previousValue = this._servicio.Entity;
				if (((previousValue != value) 
							|| (this._servicio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._servicio.Entity = null;
						previousValue.pedidos_detalles.Remove(this);
					}
					this._servicio.Entity = value;
					if ((value != null))
					{
						value.pedidos_detalles.Add(this);
						this._id_servicio = value.id_servicio;
					}
					else
					{
						this._id_servicio = default(int);
					}
					this.SendPropertyChanged("servicio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidad_venta_pedidos_detalle", Storage="_unidad_venta", ThisKey="id_unidad_venta", OtherKey="id_unidad_venta", IsForeignKey=true)]
		public unidad_venta unidad_venta
		{
			get
			{
				return this._unidad_venta.Entity;
			}
			set
			{
				unidad_venta previousValue = this._unidad_venta.Entity;
				if (((previousValue != value) 
							|| (this._unidad_venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unidad_venta.Entity = null;
						previousValue.pedidos_detalles.Remove(this);
					}
					this._unidad_venta.Entity = value;
					if ((value != null))
					{
						value.pedidos_detalles.Add(this);
						this._id_unidad_venta = value.id_unidad_venta;
					}
					else
					{
						this._id_unidad_venta = default(Nullable<int>);
					}
					this.SendPropertyChanged("unidad_venta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_pedidos_detalle", Storage="_usuario", ThisKey="id_usuario", OtherKey="id_usuario", IsForeignKey=true)]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.pedidos_detalles.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.pedidos_detalles.Add(this);
						this._id_usuario = value.id_usuario;
					}
					else
					{
						this._id_usuario = default(int);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.permisos")]
	public partial class permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol_modulo;
		
		private int _id_rol;
		
		private int _id_modulo;
		
		private string _observacion;
		
		private bool _status;
		
		private EntityRef<modulo> _modulo;
		
		private EntityRef<role> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rol_moduloChanging(int value);
    partial void Onid_rol_moduloChanged();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void Onid_moduloChanging(int value);
    partial void Onid_moduloChanged();
    partial void OnobservacionChanging(string value);
    partial void OnobservacionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public permiso()
		{
			this._modulo = default(EntityRef<modulo>);
			this._role = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol_modulo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rol_modulo
		{
			get
			{
				return this._id_rol_modulo;
			}
			set
			{
				if ((this._id_rol_modulo != value))
				{
					this.Onid_rol_moduloChanging(value);
					this.SendPropertyChanging();
					this._id_rol_modulo = value;
					this.SendPropertyChanged("id_rol_modulo");
					this.Onid_rol_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int NOT NULL")]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_modulo", DbType="Int NOT NULL")]
		public int id_modulo
		{
			get
			{
				return this._id_modulo;
			}
			set
			{
				if ((this._id_modulo != value))
				{
					if (this._modulo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_moduloChanging(value);
					this.SendPropertyChanging();
					this._id_modulo = value;
					this.SendPropertyChanged("id_modulo");
					this.Onid_moduloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observacion", DbType="VarChar(700) NOT NULL", CanBeNull=false)]
		public string observacion
		{
			get
			{
				return this._observacion;
			}
			set
			{
				if ((this._observacion != value))
				{
					this.OnobservacionChanging(value);
					this.SendPropertyChanging();
					this._observacion = value;
					this.SendPropertyChanged("observacion");
					this.OnobservacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="modulo_permiso", Storage="_modulo", ThisKey="id_modulo", OtherKey="id_modulo", IsForeignKey=true)]
		public modulo modulo
		{
			get
			{
				return this._modulo.Entity;
			}
			set
			{
				modulo previousValue = this._modulo.Entity;
				if (((previousValue != value) 
							|| (this._modulo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._modulo.Entity = null;
						previousValue.permisos.Remove(this);
					}
					this._modulo.Entity = value;
					if ((value != null))
					{
						value.permisos.Add(this);
						this._id_modulo = value.id_modulo;
					}
					else
					{
						this._id_modulo = default(int);
					}
					this.SendPropertyChanged("modulo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_permiso", Storage="_role", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.permisos.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.permisos.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.precios")]
	public partial class precio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_precio;
		
		private decimal _precio1;
		
		private System.Nullable<int> _id_servicio;
		
		private System.Nullable<int> _id_unidad_venta;
		
		private bool _status;
		
		private EntitySet<pedidos_detalle> _pedidos_detalles;
		
		private EntityRef<servicio> _servicio;
		
		private EntityRef<unidad_venta> _unidad_venta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_precioChanging(int value);
    partial void Onid_precioChanged();
    partial void Onprecio1Changing(decimal value);
    partial void Onprecio1Changed();
    partial void Onid_servicioChanging(System.Nullable<int> value);
    partial void Onid_servicioChanged();
    partial void Onid_unidad_ventaChanging(System.Nullable<int> value);
    partial void Onid_unidad_ventaChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public precio()
		{
			this._pedidos_detalles = new EntitySet<pedidos_detalle>(new Action<pedidos_detalle>(this.attach_pedidos_detalles), new Action<pedidos_detalle>(this.detach_pedidos_detalles));
			this._servicio = default(EntityRef<servicio>);
			this._unidad_venta = default(EntityRef<unidad_venta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_precio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_precio
		{
			get
			{
				return this._id_precio;
			}
			set
			{
				if ((this._id_precio != value))
				{
					this.Onid_precioChanging(value);
					this.SendPropertyChanging();
					this._id_precio = value;
					this.SendPropertyChanged("id_precio");
					this.Onid_precioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="precio", Storage="_precio1", DbType="Decimal(10,2) NOT NULL")]
		public decimal precio1
		{
			get
			{
				return this._precio1;
			}
			set
			{
				if ((this._precio1 != value))
				{
					this.Onprecio1Changing(value);
					this.SendPropertyChanging();
					this._precio1 = value;
					this.SendPropertyChanged("precio1");
					this.Onprecio1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_servicio", DbType="Int")]
		public System.Nullable<int> id_servicio
		{
			get
			{
				return this._id_servicio;
			}
			set
			{
				if ((this._id_servicio != value))
				{
					if (this._servicio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_servicioChanging(value);
					this.SendPropertyChanging();
					this._id_servicio = value;
					this.SendPropertyChanged("id_servicio");
					this.Onid_servicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unidad_venta", DbType="Int")]
		public System.Nullable<int> id_unidad_venta
		{
			get
			{
				return this._id_unidad_venta;
			}
			set
			{
				if ((this._id_unidad_venta != value))
				{
					if (this._unidad_venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_unidad_ventaChanging(value);
					this.SendPropertyChanging();
					this._id_unidad_venta = value;
					this.SendPropertyChanged("id_unidad_venta");
					this.Onid_unidad_ventaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="precio_pedidos_detalle", Storage="_pedidos_detalles", ThisKey="id_precio", OtherKey="id_precio")]
		public EntitySet<pedidos_detalle> pedidos_detalles
		{
			get
			{
				return this._pedidos_detalles;
			}
			set
			{
				this._pedidos_detalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="servicio_precio", Storage="_servicio", ThisKey="id_servicio", OtherKey="id_servicio", IsForeignKey=true)]
		public servicio servicio
		{
			get
			{
				return this._servicio.Entity;
			}
			set
			{
				servicio previousValue = this._servicio.Entity;
				if (((previousValue != value) 
							|| (this._servicio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._servicio.Entity = null;
						previousValue.precios.Remove(this);
					}
					this._servicio.Entity = value;
					if ((value != null))
					{
						value.precios.Add(this);
						this._id_servicio = value.id_servicio;
					}
					else
					{
						this._id_servicio = default(Nullable<int>);
					}
					this.SendPropertyChanged("servicio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidad_venta_precio", Storage="_unidad_venta", ThisKey="id_unidad_venta", OtherKey="id_unidad_venta", IsForeignKey=true)]
		public unidad_venta unidad_venta
		{
			get
			{
				return this._unidad_venta.Entity;
			}
			set
			{
				unidad_venta previousValue = this._unidad_venta.Entity;
				if (((previousValue != value) 
							|| (this._unidad_venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unidad_venta.Entity = null;
						previousValue.precios.Remove(this);
					}
					this._unidad_venta.Entity = value;
					if ((value != null))
					{
						value.precios.Add(this);
						this._id_unidad_venta = value.id_unidad_venta;
					}
					else
					{
						this._id_unidad_venta = default(Nullable<int>);
					}
					this.SendPropertyChanged("unidad_venta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.precio = this;
		}
		
		private void detach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.precio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.repartidor")]
	public partial class repartidor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_repartidor;
		
		private System.Nullable<int> _id_tipo;
		
		private string _nombre;
		
		private string _telefono;
		
		private string _celular;
		
		private System.Nullable<int> _id_unidad;
		
		private System.Nullable<int> _id_zona;
		
		private System.Nullable<int> _id_estado;
		
		private System.Nullable<int> _id_ciudad;
		
		private System.Nullable<int> _id_colonia;
		
		private System.Nullable<int> _id_calle;
		
		private System.Nullable<int> _num_int;
		
		private System.Nullable<int> _num_ext;
		
		private string _entre1;
		
		private string _entre2;
		
		private string _referencia;
		
		private EntitySet<asigna_ruta_repartidor> _asigna_ruta_repartidors;
		
		private EntitySet<reporte_falla> _reporte_fallas;
		
		private EntityRef<calle> _calle;
		
		private EntityRef<ciudade> _ciudade;
		
		private EntityRef<colonia> _colonia;
		
		private EntityRef<estado> _estado;
		
		private EntityRef<zona> _zona;
		
		private EntityRef<tipo_repartidor> _tipo_repartidor;
		
		private EntityRef<unidade> _unidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_repartidorChanging(int value);
    partial void Onid_repartidorChanged();
    partial void Onid_tipoChanging(System.Nullable<int> value);
    partial void Onid_tipoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void Onid_unidadChanging(System.Nullable<int> value);
    partial void Onid_unidadChanged();
    partial void Onid_zonaChanging(System.Nullable<int> value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(System.Nullable<int> value);
    partial void Onid_estadoChanged();
    partial void Onid_ciudadChanging(System.Nullable<int> value);
    partial void Onid_ciudadChanged();
    partial void Onid_coloniaChanging(System.Nullable<int> value);
    partial void Onid_coloniaChanged();
    partial void Onid_calleChanging(System.Nullable<int> value);
    partial void Onid_calleChanged();
    partial void Onnum_intChanging(System.Nullable<int> value);
    partial void Onnum_intChanged();
    partial void Onnum_extChanging(System.Nullable<int> value);
    partial void Onnum_extChanged();
    partial void Onentre1Changing(string value);
    partial void Onentre1Changed();
    partial void Onentre2Changing(string value);
    partial void Onentre2Changed();
    partial void OnreferenciaChanging(string value);
    partial void OnreferenciaChanged();
    #endregion
		
		public repartidor()
		{
			this._asigna_ruta_repartidors = new EntitySet<asigna_ruta_repartidor>(new Action<asigna_ruta_repartidor>(this.attach_asigna_ruta_repartidors), new Action<asigna_ruta_repartidor>(this.detach_asigna_ruta_repartidors));
			this._reporte_fallas = new EntitySet<reporte_falla>(new Action<reporte_falla>(this.attach_reporte_fallas), new Action<reporte_falla>(this.detach_reporte_fallas));
			this._calle = default(EntityRef<calle>);
			this._ciudade = default(EntityRef<ciudade>);
			this._colonia = default(EntityRef<colonia>);
			this._estado = default(EntityRef<estado>);
			this._zona = default(EntityRef<zona>);
			this._tipo_repartidor = default(EntityRef<tipo_repartidor>);
			this._unidade = default(EntityRef<unidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_repartidor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_repartidor
		{
			get
			{
				return this._id_repartidor;
			}
			set
			{
				if ((this._id_repartidor != value))
				{
					this.Onid_repartidorChanging(value);
					this.SendPropertyChanging();
					this._id_repartidor = value;
					this.SendPropertyChanged("id_repartidor");
					this.Onid_repartidorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo", DbType="Int")]
		public System.Nullable<int> id_tipo
		{
			get
			{
				return this._id_tipo;
			}
			set
			{
				if ((this._id_tipo != value))
				{
					if (this._tipo_repartidor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_tipoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo = value;
					this.SendPropertyChanged("id_tipo");
					this.Onid_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(20)")]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_celular", DbType="VarChar(30)")]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unidad", DbType="Int")]
		public System.Nullable<int> id_unidad
		{
			get
			{
				return this._id_unidad;
			}
			set
			{
				if ((this._id_unidad != value))
				{
					if (this._unidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_unidadChanging(value);
					this.SendPropertyChanging();
					this._id_unidad = value;
					this.SendPropertyChanged("id_unidad");
					this.Onid_unidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int")]
		public System.Nullable<int> id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int")]
		public System.Nullable<int> id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ciudad", DbType="Int")]
		public System.Nullable<int> id_ciudad
		{
			get
			{
				return this._id_ciudad;
			}
			set
			{
				if ((this._id_ciudad != value))
				{
					if (this._ciudade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ciudadChanging(value);
					this.SendPropertyChanging();
					this._id_ciudad = value;
					this.SendPropertyChanged("id_ciudad");
					this.Onid_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_colonia", DbType="Int")]
		public System.Nullable<int> id_colonia
		{
			get
			{
				return this._id_colonia;
			}
			set
			{
				if ((this._id_colonia != value))
				{
					if (this._colonia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_coloniaChanging(value);
					this.SendPropertyChanging();
					this._id_colonia = value;
					this.SendPropertyChanged("id_colonia");
					this.Onid_coloniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_calle", DbType="Int")]
		public System.Nullable<int> id_calle
		{
			get
			{
				return this._id_calle;
			}
			set
			{
				if ((this._id_calle != value))
				{
					if (this._calle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_calleChanging(value);
					this.SendPropertyChanging();
					this._id_calle = value;
					this.SendPropertyChanged("id_calle");
					this.Onid_calleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_int", DbType="Int")]
		public System.Nullable<int> num_int
		{
			get
			{
				return this._num_int;
			}
			set
			{
				if ((this._num_int != value))
				{
					this.Onnum_intChanging(value);
					this.SendPropertyChanging();
					this._num_int = value;
					this.SendPropertyChanged("num_int");
					this.Onnum_intChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_ext", DbType="Int")]
		public System.Nullable<int> num_ext
		{
			get
			{
				return this._num_ext;
			}
			set
			{
				if ((this._num_ext != value))
				{
					this.Onnum_extChanging(value);
					this.SendPropertyChanging();
					this._num_ext = value;
					this.SendPropertyChanged("num_ext");
					this.Onnum_extChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entre1", DbType="VarChar(200)")]
		public string entre1
		{
			get
			{
				return this._entre1;
			}
			set
			{
				if ((this._entre1 != value))
				{
					this.Onentre1Changing(value);
					this.SendPropertyChanging();
					this._entre1 = value;
					this.SendPropertyChanged("entre1");
					this.Onentre1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entre2", DbType="VarChar(200)")]
		public string entre2
		{
			get
			{
				return this._entre2;
			}
			set
			{
				if ((this._entre2 != value))
				{
					this.Onentre2Changing(value);
					this.SendPropertyChanging();
					this._entre2 = value;
					this.SendPropertyChanged("entre2");
					this.Onentre2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referencia", DbType="VarChar(600)")]
		public string referencia
		{
			get
			{
				return this._referencia;
			}
			set
			{
				if ((this._referencia != value))
				{
					this.OnreferenciaChanging(value);
					this.SendPropertyChanging();
					this._referencia = value;
					this.SendPropertyChanged("referencia");
					this.OnreferenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repartidor_asigna_ruta_repartidor", Storage="_asigna_ruta_repartidors", ThisKey="id_repartidor", OtherKey="id_repartidor")]
		public EntitySet<asigna_ruta_repartidor> asigna_ruta_repartidors
		{
			get
			{
				return this._asigna_ruta_repartidors;
			}
			set
			{
				this._asigna_ruta_repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repartidor_reporte_falla", Storage="_reporte_fallas", ThisKey="id_repartidor", OtherKey="id_repartidor")]
		public EntitySet<reporte_falla> reporte_fallas
		{
			get
			{
				return this._reporte_fallas;
			}
			set
			{
				this._reporte_fallas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="calle_repartidor", Storage="_calle", ThisKey="id_calle", OtherKey="id_calle", IsForeignKey=true)]
		public calle calle
		{
			get
			{
				return this._calle.Entity;
			}
			set
			{
				calle previousValue = this._calle.Entity;
				if (((previousValue != value) 
							|| (this._calle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._calle.Entity = null;
						previousValue.repartidors.Remove(this);
					}
					this._calle.Entity = value;
					if ((value != null))
					{
						value.repartidors.Add(this);
						this._id_calle = value.id_calle;
					}
					else
					{
						this._id_calle = default(Nullable<int>);
					}
					this.SendPropertyChanged("calle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ciudade_repartidor", Storage="_ciudade", ThisKey="id_ciudad", OtherKey="id_ciudad", IsForeignKey=true)]
		public ciudade ciudade
		{
			get
			{
				return this._ciudade.Entity;
			}
			set
			{
				ciudade previousValue = this._ciudade.Entity;
				if (((previousValue != value) 
							|| (this._ciudade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ciudade.Entity = null;
						previousValue.repartidors.Remove(this);
					}
					this._ciudade.Entity = value;
					if ((value != null))
					{
						value.repartidors.Add(this);
						this._id_ciudad = value.id_ciudad;
					}
					else
					{
						this._id_ciudad = default(Nullable<int>);
					}
					this.SendPropertyChanged("ciudade");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="colonia_repartidor", Storage="_colonia", ThisKey="id_colonia", OtherKey="id_colonia", IsForeignKey=true)]
		public colonia colonia
		{
			get
			{
				return this._colonia.Entity;
			}
			set
			{
				colonia previousValue = this._colonia.Entity;
				if (((previousValue != value) 
							|| (this._colonia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._colonia.Entity = null;
						previousValue.repartidors.Remove(this);
					}
					this._colonia.Entity = value;
					if ((value != null))
					{
						value.repartidors.Add(this);
						this._id_colonia = value.id_colonia;
					}
					else
					{
						this._id_colonia = default(Nullable<int>);
					}
					this.SendPropertyChanged("colonia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_repartidor", Storage="_estado", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estado estado
		{
			get
			{
				return this._estado.Entity;
			}
			set
			{
				estado previousValue = this._estado.Entity;
				if (((previousValue != value) 
							|| (this._estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado.Entity = null;
						previousValue.repartidors.Remove(this);
					}
					this._estado.Entity = value;
					if ((value != null))
					{
						value.repartidors.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(Nullable<int>);
					}
					this.SendPropertyChanged("estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_repartidor", Storage="_zona", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zona zona
		{
			get
			{
				return this._zona.Entity;
			}
			set
			{
				zona previousValue = this._zona.Entity;
				if (((previousValue != value) 
							|| (this._zona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zona.Entity = null;
						previousValue.repartidors.Remove(this);
					}
					this._zona.Entity = value;
					if ((value != null))
					{
						value.repartidors.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(Nullable<int>);
					}
					this.SendPropertyChanged("zona");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_repartidor_repartidor", Storage="_tipo_repartidor", ThisKey="id_tipo", OtherKey="id_tipo", IsForeignKey=true)]
		public tipo_repartidor tipo_repartidor
		{
			get
			{
				return this._tipo_repartidor.Entity;
			}
			set
			{
				tipo_repartidor previousValue = this._tipo_repartidor.Entity;
				if (((previousValue != value) 
							|| (this._tipo_repartidor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tipo_repartidor.Entity = null;
						previousValue.repartidors.Remove(this);
					}
					this._tipo_repartidor.Entity = value;
					if ((value != null))
					{
						value.repartidors.Add(this);
						this._id_tipo = value.id_tipo;
					}
					else
					{
						this._id_tipo = default(Nullable<int>);
					}
					this.SendPropertyChanged("tipo_repartidor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidade_repartidor", Storage="_unidade", ThisKey="id_unidad", OtherKey="id_unidad", IsForeignKey=true)]
		public unidade unidade
		{
			get
			{
				return this._unidade.Entity;
			}
			set
			{
				unidade previousValue = this._unidade.Entity;
				if (((previousValue != value) 
							|| (this._unidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unidade.Entity = null;
						previousValue.repartidors.Remove(this);
					}
					this._unidade.Entity = value;
					if ((value != null))
					{
						value.repartidors.Add(this);
						this._id_unidad = value.id_unidad;
					}
					else
					{
						this._id_unidad = default(Nullable<int>);
					}
					this.SendPropertyChanged("unidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_asigna_ruta_repartidors(asigna_ruta_repartidor entity)
		{
			this.SendPropertyChanging();
			entity.repartidor = this;
		}
		
		private void detach_asigna_ruta_repartidors(asigna_ruta_repartidor entity)
		{
			this.SendPropertyChanging();
			entity.repartidor = null;
		}
		
		private void attach_reporte_fallas(reporte_falla entity)
		{
			this.SendPropertyChanging();
			entity.repartidor = this;
		}
		
		private void detach_reporte_fallas(reporte_falla entity)
		{
			this.SendPropertyChanging();
			entity.repartidor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reporte_fallas")]
	public partial class reporte_falla : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_reporte;
		
		private int _id_repartidor;
		
		private int _id_ruta;
		
		private int _id_unidad;
		
		private string _observaciones;
		
		private string _direccion;
		
		private System.Nullable<System.DateTime> _fecha;
		
		private System.Nullable<System.TimeSpan> _hora;
		
		private System.Nullable<bool> _atendido;
		
		private System.Nullable<bool> _status;
		
		private EntityRef<repartidor> _repartidor;
		
		private EntityRef<ruta> _ruta;
		
		private EntityRef<unidade> _unidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_reporteChanging(int value);
    partial void Onid_reporteChanged();
    partial void Onid_repartidorChanging(int value);
    partial void Onid_repartidorChanged();
    partial void Onid_rutaChanging(int value);
    partial void Onid_rutaChanged();
    partial void Onid_unidadChanging(int value);
    partial void Onid_unidadChanged();
    partial void OnobservacionesChanging(string value);
    partial void OnobservacionesChanged();
    partial void OndireccionChanging(string value);
    partial void OndireccionChanged();
    partial void OnfechaChanging(System.Nullable<System.DateTime> value);
    partial void OnfechaChanged();
    partial void OnhoraChanging(System.Nullable<System.TimeSpan> value);
    partial void OnhoraChanged();
    partial void OnatendidoChanging(System.Nullable<bool> value);
    partial void OnatendidoChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public reporte_falla()
		{
			this._repartidor = default(EntityRef<repartidor>);
			this._ruta = default(EntityRef<ruta>);
			this._unidade = default(EntityRef<unidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_reporte", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_reporte
		{
			get
			{
				return this._id_reporte;
			}
			set
			{
				if ((this._id_reporte != value))
				{
					this.Onid_reporteChanging(value);
					this.SendPropertyChanging();
					this._id_reporte = value;
					this.SendPropertyChanged("id_reporte");
					this.Onid_reporteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_repartidor", DbType="Int NOT NULL")]
		public int id_repartidor
		{
			get
			{
				return this._id_repartidor;
			}
			set
			{
				if ((this._id_repartidor != value))
				{
					if (this._repartidor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_repartidorChanging(value);
					this.SendPropertyChanging();
					this._id_repartidor = value;
					this.SendPropertyChanged("id_repartidor");
					this.Onid_repartidorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ruta", DbType="Int NOT NULL")]
		public int id_ruta
		{
			get
			{
				return this._id_ruta;
			}
			set
			{
				if ((this._id_ruta != value))
				{
					if (this._ruta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rutaChanging(value);
					this.SendPropertyChanging();
					this._id_ruta = value;
					this.SendPropertyChanged("id_ruta");
					this.Onid_rutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unidad", DbType="Int NOT NULL")]
		public int id_unidad
		{
			get
			{
				return this._id_unidad;
			}
			set
			{
				if ((this._id_unidad != value))
				{
					if (this._unidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_unidadChanging(value);
					this.SendPropertyChanging();
					this._id_unidad = value;
					this.SendPropertyChanged("id_unidad");
					this.Onid_unidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observaciones", DbType="VarChar(500)")]
		public string observaciones
		{
			get
			{
				return this._observaciones;
			}
			set
			{
				if ((this._observaciones != value))
				{
					this.OnobservacionesChanging(value);
					this.SendPropertyChanging();
					this._observaciones = value;
					this.SendPropertyChanged("observaciones");
					this.OnobservacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_direccion", DbType="VarChar(700)")]
		public string direccion
		{
			get
			{
				return this._direccion;
			}
			set
			{
				if ((this._direccion != value))
				{
					this.OndireccionChanging(value);
					this.SendPropertyChanging();
					this._direccion = value;
					this.SendPropertyChanged("direccion");
					this.OndireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="Date")]
		public System.Nullable<System.DateTime> fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hora", DbType="Time")]
		public System.Nullable<System.TimeSpan> hora
		{
			get
			{
				return this._hora;
			}
			set
			{
				if ((this._hora != value))
				{
					this.OnhoraChanging(value);
					this.SendPropertyChanging();
					this._hora = value;
					this.SendPropertyChanged("hora");
					this.OnhoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_atendido", DbType="Bit")]
		public System.Nullable<bool> atendido
		{
			get
			{
				return this._atendido;
			}
			set
			{
				if ((this._atendido != value))
				{
					this.OnatendidoChanging(value);
					this.SendPropertyChanging();
					this._atendido = value;
					this.SendPropertyChanged("atendido");
					this.OnatendidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="repartidor_reporte_falla", Storage="_repartidor", ThisKey="id_repartidor", OtherKey="id_repartidor", IsForeignKey=true)]
		public repartidor repartidor
		{
			get
			{
				return this._repartidor.Entity;
			}
			set
			{
				repartidor previousValue = this._repartidor.Entity;
				if (((previousValue != value) 
							|| (this._repartidor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._repartidor.Entity = null;
						previousValue.reporte_fallas.Remove(this);
					}
					this._repartidor.Entity = value;
					if ((value != null))
					{
						value.reporte_fallas.Add(this);
						this._id_repartidor = value.id_repartidor;
					}
					else
					{
						this._id_repartidor = default(int);
					}
					this.SendPropertyChanged("repartidor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ruta_reporte_falla", Storage="_ruta", ThisKey="id_ruta", OtherKey="id_ruta", IsForeignKey=true)]
		public ruta ruta
		{
			get
			{
				return this._ruta.Entity;
			}
			set
			{
				ruta previousValue = this._ruta.Entity;
				if (((previousValue != value) 
							|| (this._ruta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ruta.Entity = null;
						previousValue.reporte_fallas.Remove(this);
					}
					this._ruta.Entity = value;
					if ((value != null))
					{
						value.reporte_fallas.Add(this);
						this._id_ruta = value.id_ruta;
					}
					else
					{
						this._id_ruta = default(int);
					}
					this.SendPropertyChanged("ruta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidade_reporte_falla", Storage="_unidade", ThisKey="id_unidad", OtherKey="id_unidad", IsForeignKey=true)]
		public unidade unidade
		{
			get
			{
				return this._unidade.Entity;
			}
			set
			{
				unidade previousValue = this._unidade.Entity;
				if (((previousValue != value) 
							|| (this._unidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._unidade.Entity = null;
						previousValue.reporte_fallas.Remove(this);
					}
					this._unidade.Entity = value;
					if ((value != null))
					{
						value.reporte_fallas.Add(this);
						this._id_unidad = value.id_unidad;
					}
					else
					{
						this._id_unidad = default(int);
					}
					this.SendPropertyChanged("unidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.roles")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_rol;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<permiso> _permisos;
		
		private EntitySet<usuario> _usuarios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rolChanging(int value);
    partial void Onid_rolChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public role()
		{
			this._permisos = new EntitySet<permiso>(new Action<permiso>(this.attach_permisos), new Action<permiso>(this.detach_permisos));
			this._usuarios = new EntitySet<usuario>(new Action<usuario>(this.attach_usuarios), new Action<usuario>(this.detach_usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_permiso", Storage="_permisos", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<permiso> permisos
		{
			get
			{
				return this._permisos;
			}
			set
			{
				this._permisos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_usuario", Storage="_usuarios", ThisKey="id_rol", OtherKey="id_rol")]
		public EntitySet<usuario> usuarios
		{
			get
			{
				return this._usuarios;
			}
			set
			{
				this._usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_permisos(permiso entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_permisos(permiso entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
		
		private void attach_usuarios(usuario entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_usuarios(usuario entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rutas")]
	public partial class ruta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ruta;
		
		private string _descripcion;
		
		private bool _status;
		
		private int _id_zona;
		
		private int _id_estado;
		
		private EntitySet<asigna_ruta_repartidor> _asigna_ruta_repartidors;
		
		private EntitySet<asigna_ruta_user> _asigna_ruta_users;
		
		private EntitySet<reporte_falla> _reporte_fallas;
		
		private EntityRef<estado> _estado;
		
		private EntityRef<zona> _zona;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_rutaChanging(int value);
    partial void Onid_rutaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    partial void Onid_zonaChanging(int value);
    partial void Onid_zonaChanged();
    partial void Onid_estadoChanging(int value);
    partial void Onid_estadoChanged();
    #endregion
		
		public ruta()
		{
			this._asigna_ruta_repartidors = new EntitySet<asigna_ruta_repartidor>(new Action<asigna_ruta_repartidor>(this.attach_asigna_ruta_repartidors), new Action<asigna_ruta_repartidor>(this.detach_asigna_ruta_repartidors));
			this._asigna_ruta_users = new EntitySet<asigna_ruta_user>(new Action<asigna_ruta_user>(this.attach_asigna_ruta_users), new Action<asigna_ruta_user>(this.detach_asigna_ruta_users));
			this._reporte_fallas = new EntitySet<reporte_falla>(new Action<reporte_falla>(this.attach_reporte_fallas), new Action<reporte_falla>(this.detach_reporte_fallas));
			this._estado = default(EntityRef<estado>);
			this._zona = default(EntityRef<zona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ruta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ruta
		{
			get
			{
				return this._id_ruta;
			}
			set
			{
				if ((this._id_ruta != value))
				{
					this.Onid_rutaChanging(value);
					this.SendPropertyChanging();
					this._id_ruta = value;
					this.SendPropertyChanged("id_ruta");
					this.Onid_rutaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zona", DbType="Int NOT NULL")]
		public int id_zona
		{
			get
			{
				return this._id_zona;
			}
			set
			{
				if ((this._id_zona != value))
				{
					if (this._zona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zonaChanging(value);
					this.SendPropertyChanging();
					this._id_zona = value;
					this.SendPropertyChanged("id_zona");
					this.Onid_zonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_estado", DbType="Int NOT NULL")]
		public int id_estado
		{
			get
			{
				return this._id_estado;
			}
			set
			{
				if ((this._id_estado != value))
				{
					if (this._estado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_estadoChanging(value);
					this.SendPropertyChanging();
					this._id_estado = value;
					this.SendPropertyChanged("id_estado");
					this.Onid_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ruta_asigna_ruta_repartidor", Storage="_asigna_ruta_repartidors", ThisKey="id_ruta", OtherKey="id_ruta")]
		public EntitySet<asigna_ruta_repartidor> asigna_ruta_repartidors
		{
			get
			{
				return this._asigna_ruta_repartidors;
			}
			set
			{
				this._asigna_ruta_repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ruta_asigna_ruta_user", Storage="_asigna_ruta_users", ThisKey="id_ruta", OtherKey="id_ruta")]
		public EntitySet<asigna_ruta_user> asigna_ruta_users
		{
			get
			{
				return this._asigna_ruta_users;
			}
			set
			{
				this._asigna_ruta_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ruta_reporte_falla", Storage="_reporte_fallas", ThisKey="id_ruta", OtherKey="id_ruta")]
		public EntitySet<reporte_falla> reporte_fallas
		{
			get
			{
				return this._reporte_fallas;
			}
			set
			{
				this._reporte_fallas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="estado_ruta", Storage="_estado", ThisKey="id_estado", OtherKey="id_estado", IsForeignKey=true)]
		public estado estado
		{
			get
			{
				return this._estado.Entity;
			}
			set
			{
				estado previousValue = this._estado.Entity;
				if (((previousValue != value) 
							|| (this._estado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._estado.Entity = null;
						previousValue.rutas.Remove(this);
					}
					this._estado.Entity = value;
					if ((value != null))
					{
						value.rutas.Add(this);
						this._id_estado = value.id_estado;
					}
					else
					{
						this._id_estado = default(int);
					}
					this.SendPropertyChanged("estado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zona_ruta", Storage="_zona", ThisKey="id_zona", OtherKey="id_zona", IsForeignKey=true)]
		public zona zona
		{
			get
			{
				return this._zona.Entity;
			}
			set
			{
				zona previousValue = this._zona.Entity;
				if (((previousValue != value) 
							|| (this._zona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zona.Entity = null;
						previousValue.rutas.Remove(this);
					}
					this._zona.Entity = value;
					if ((value != null))
					{
						value.rutas.Add(this);
						this._id_zona = value.id_zona;
					}
					else
					{
						this._id_zona = default(int);
					}
					this.SendPropertyChanged("zona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_asigna_ruta_repartidors(asigna_ruta_repartidor entity)
		{
			this.SendPropertyChanging();
			entity.ruta = this;
		}
		
		private void detach_asigna_ruta_repartidors(asigna_ruta_repartidor entity)
		{
			this.SendPropertyChanging();
			entity.ruta = null;
		}
		
		private void attach_asigna_ruta_users(asigna_ruta_user entity)
		{
			this.SendPropertyChanging();
			entity.ruta = this;
		}
		
		private void detach_asigna_ruta_users(asigna_ruta_user entity)
		{
			this.SendPropertyChanging();
			entity.ruta = null;
		}
		
		private void attach_reporte_fallas(reporte_falla entity)
		{
			this.SendPropertyChanging();
			entity.ruta = this;
		}
		
		private void detach_reporte_fallas(reporte_falla entity)
		{
			this.SendPropertyChanging();
			entity.ruta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.servicios")]
	public partial class servicio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_servicio;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<pedidos_detalle> _pedidos_detalles;
		
		private EntitySet<precio> _precios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_servicioChanging(int value);
    partial void Onid_servicioChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public servicio()
		{
			this._pedidos_detalles = new EntitySet<pedidos_detalle>(new Action<pedidos_detalle>(this.attach_pedidos_detalles), new Action<pedidos_detalle>(this.detach_pedidos_detalles));
			this._precios = new EntitySet<precio>(new Action<precio>(this.attach_precios), new Action<precio>(this.detach_precios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_servicio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_servicio
		{
			get
			{
				return this._id_servicio;
			}
			set
			{
				if ((this._id_servicio != value))
				{
					this.Onid_servicioChanging(value);
					this.SendPropertyChanging();
					this._id_servicio = value;
					this.SendPropertyChanged("id_servicio");
					this.Onid_servicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="servicio_pedidos_detalle", Storage="_pedidos_detalles", ThisKey="id_servicio", OtherKey="id_servicio")]
		public EntitySet<pedidos_detalle> pedidos_detalles
		{
			get
			{
				return this._pedidos_detalles;
			}
			set
			{
				this._pedidos_detalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="servicio_precio", Storage="_precios", ThisKey="id_servicio", OtherKey="id_servicio")]
		public EntitySet<precio> precios
		{
			get
			{
				return this._precios;
			}
			set
			{
				this._precios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.servicio = this;
		}
		
		private void detach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.servicio = null;
		}
		
		private void attach_precios(precio entity)
		{
			this.SendPropertyChanging();
			entity.servicio = this;
		}
		
		private void detach_precios(precio entity)
		{
			this.SendPropertyChanging();
			entity.servicio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_clientes")]
	public partial class tipo_cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_tipo;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<cliente> _clientes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tipoChanging(int value);
    partial void Onid_tipoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public tipo_cliente()
		{
			this._clientes = new EntitySet<cliente>(new Action<cliente>(this.attach_clientes), new Action<cliente>(this.detach_clientes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_tipo
		{
			get
			{
				return this._id_tipo;
			}
			set
			{
				if ((this._id_tipo != value))
				{
					this.Onid_tipoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo = value;
					this.SendPropertyChanged("id_tipo");
					this.Onid_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_cliente_cliente", Storage="_clientes", ThisKey="id_tipo", OtherKey="id_tipo_cliente")]
		public EntitySet<cliente> clientes
		{
			get
			{
				return this._clientes;
			}
			set
			{
				this._clientes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_clientes(cliente entity)
		{
			this.SendPropertyChanging();
			entity.tipo_cliente = this;
		}
		
		private void detach_clientes(cliente entity)
		{
			this.SendPropertyChanging();
			entity.tipo_cliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tipo_repartidor")]
	public partial class tipo_repartidor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_tipo;
		
		private string _descripcion;
		
		private System.Nullable<bool> _status;
		
		private EntitySet<repartidor> _repartidors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_tipoChanging(int value);
    partial void Onid_tipoChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public tipo_repartidor()
		{
			this._repartidors = new EntitySet<repartidor>(new Action<repartidor>(this.attach_repartidors), new Action<repartidor>(this.detach_repartidors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_tipo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_tipo
		{
			get
			{
				return this._id_tipo;
			}
			set
			{
				if ((this._id_tipo != value))
				{
					this.Onid_tipoChanging(value);
					this.SendPropertyChanging();
					this._id_tipo = value;
					this.SendPropertyChanged("id_tipo");
					this.Onid_tipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tipo_repartidor_repartidor", Storage="_repartidors", ThisKey="id_tipo", OtherKey="id_tipo")]
		public EntitySet<repartidor> repartidors
		{
			get
			{
				return this._repartidors;
			}
			set
			{
				this._repartidors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.tipo_repartidor = this;
		}
		
		private void detach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.tipo_repartidor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unidad_venta")]
	public partial class unidad_venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unidad_venta;
		
		private string _descripcion;
		
		private bool _status;
		
		private EntitySet<pedidos_detalle> _pedidos_detalles;
		
		private EntitySet<precio> _precios;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unidad_ventaChanging(int value);
    partial void Onid_unidad_ventaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(bool value);
    partial void OnstatusChanged();
    #endregion
		
		public unidad_venta()
		{
			this._pedidos_detalles = new EntitySet<pedidos_detalle>(new Action<pedidos_detalle>(this.attach_pedidos_detalles), new Action<pedidos_detalle>(this.detach_pedidos_detalles));
			this._precios = new EntitySet<precio>(new Action<precio>(this.attach_precios), new Action<precio>(this.detach_precios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unidad_venta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_unidad_venta
		{
			get
			{
				return this._id_unidad_venta;
			}
			set
			{
				if ((this._id_unidad_venta != value))
				{
					this.Onid_unidad_ventaChanging(value);
					this.SendPropertyChanging();
					this._id_unidad_venta = value;
					this.SendPropertyChanged("id_unidad_venta");
					this.Onid_unidad_ventaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit NOT NULL")]
		public bool status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidad_venta_pedidos_detalle", Storage="_pedidos_detalles", ThisKey="id_unidad_venta", OtherKey="id_unidad_venta")]
		public EntitySet<pedidos_detalle> pedidos_detalles
		{
			get
			{
				return this._pedidos_detalles;
			}
			set
			{
				this._pedidos_detalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidad_venta_precio", Storage="_precios", ThisKey="id_unidad_venta", OtherKey="id_unidad_venta")]
		public EntitySet<precio> precios
		{
			get
			{
				return this._precios;
			}
			set
			{
				this._precios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.unidad_venta = this;
		}
		
		private void detach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.unidad_venta = null;
		}
		
		private void attach_precios(precio entity)
		{
			this.SendPropertyChanging();
			entity.unidad_venta = this;
		}
		
		private void detach_precios(precio entity)
		{
			this.SendPropertyChanging();
			entity.unidad_venta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.unidades")]
	public partial class unidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_unidad;
		
		private string _descripcion;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<bool> _mantenimiento;
		
		private EntitySet<repartidor> _repartidors;
		
		private EntitySet<reporte_falla> _reporte_fallas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_unidadChanging(int value);
    partial void Onid_unidadChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void OnmantenimientoChanging(System.Nullable<bool> value);
    partial void OnmantenimientoChanged();
    #endregion
		
		public unidade()
		{
			this._repartidors = new EntitySet<repartidor>(new Action<repartidor>(this.attach_repartidors), new Action<repartidor>(this.detach_repartidors));
			this._reporte_fallas = new EntitySet<reporte_falla>(new Action<reporte_falla>(this.attach_reporte_fallas), new Action<reporte_falla>(this.detach_reporte_fallas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_unidad", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_unidad
		{
			get
			{
				return this._id_unidad;
			}
			set
			{
				if ((this._id_unidad != value))
				{
					this.Onid_unidadChanging(value);
					this.SendPropertyChanging();
					this._id_unidad = value;
					this.SendPropertyChanged("id_unidad");
					this.Onid_unidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mantenimiento", DbType="Bit")]
		public System.Nullable<bool> mantenimiento
		{
			get
			{
				return this._mantenimiento;
			}
			set
			{
				if ((this._mantenimiento != value))
				{
					this.OnmantenimientoChanging(value);
					this.SendPropertyChanging();
					this._mantenimiento = value;
					this.SendPropertyChanged("mantenimiento");
					this.OnmantenimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidade_repartidor", Storage="_repartidors", ThisKey="id_unidad", OtherKey="id_unidad")]
		public EntitySet<repartidor> repartidors
		{
			get
			{
				return this._repartidors;
			}
			set
			{
				this._repartidors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="unidade_reporte_falla", Storage="_reporte_fallas", ThisKey="id_unidad", OtherKey="id_unidad")]
		public EntitySet<reporte_falla> reporte_fallas
		{
			get
			{
				return this._reporte_fallas;
			}
			set
			{
				this._reporte_fallas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.unidade = this;
		}
		
		private void detach_repartidors(repartidor entity)
		{
			this.SendPropertyChanging();
			entity.unidade = null;
		}
		
		private void attach_reporte_fallas(reporte_falla entity)
		{
			this.SendPropertyChanging();
			entity.unidade = this;
		}
		
		private void detach_reporte_fallas(reporte_falla entity)
		{
			this.SendPropertyChanging();
			entity.unidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.usuarios")]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_usuario;
		
		private string _nombre;
		
		private string _username;
		
		private string _passwords;
		
		private bool _isactive;
		
		private bool _userisonline;
		
		private System.Nullable<System.DateTime> _ultimoacceso;
		
		private System.Nullable<int> _id_rol;
		
		private EntitySet<asigna_ruta_user> _asigna_ruta_users;
		
		private EntitySet<pedido> _pedidos;
		
		private EntitySet<pedidos_detalle> _pedidos_detalles;
		
		private EntityRef<role> _role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_usuarioChanging(int value);
    partial void Onid_usuarioChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordsChanging(string value);
    partial void OnpasswordsChanged();
    partial void OnisactiveChanging(bool value);
    partial void OnisactiveChanged();
    partial void OnuserisonlineChanging(bool value);
    partial void OnuserisonlineChanged();
    partial void OnultimoaccesoChanging(System.Nullable<System.DateTime> value);
    partial void OnultimoaccesoChanged();
    partial void Onid_rolChanging(System.Nullable<int> value);
    partial void Onid_rolChanged();
    #endregion
		
		public usuario()
		{
			this._asigna_ruta_users = new EntitySet<asigna_ruta_user>(new Action<asigna_ruta_user>(this.attach_asigna_ruta_users), new Action<asigna_ruta_user>(this.detach_asigna_ruta_users));
			this._pedidos = new EntitySet<pedido>(new Action<pedido>(this.attach_pedidos), new Action<pedido>(this.detach_pedidos));
			this._pedidos_detalles = new EntitySet<pedidos_detalle>(new Action<pedidos_detalle>(this.attach_pedidos_detalles), new Action<pedidos_detalle>(this.detach_pedidos_detalles));
			this._role = default(EntityRef<role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwords", DbType="VarChar(30)")]
		public string passwords
		{
			get
			{
				return this._passwords;
			}
			set
			{
				if ((this._passwords != value))
				{
					this.OnpasswordsChanging(value);
					this.SendPropertyChanging();
					this._passwords = value;
					this.SendPropertyChanged("passwords");
					this.OnpasswordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isactive", DbType="Bit NOT NULL")]
		public bool isactive
		{
			get
			{
				return this._isactive;
			}
			set
			{
				if ((this._isactive != value))
				{
					this.OnisactiveChanging(value);
					this.SendPropertyChanging();
					this._isactive = value;
					this.SendPropertyChanged("isactive");
					this.OnisactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userisonline", DbType="Bit NOT NULL")]
		public bool userisonline
		{
			get
			{
				return this._userisonline;
			}
			set
			{
				if ((this._userisonline != value))
				{
					this.OnuserisonlineChanging(value);
					this.SendPropertyChanging();
					this._userisonline = value;
					this.SendPropertyChanged("userisonline");
					this.OnuserisonlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ultimoacceso", DbType="Date")]
		public System.Nullable<System.DateTime> ultimoacceso
		{
			get
			{
				return this._ultimoacceso;
			}
			set
			{
				if ((this._ultimoacceso != value))
				{
					this.OnultimoaccesoChanging(value);
					this.SendPropertyChanging();
					this._ultimoacceso = value;
					this.SendPropertyChanged("ultimoacceso");
					this.OnultimoaccesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_rol", DbType="Int")]
		public System.Nullable<int> id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_asigna_ruta_user", Storage="_asigna_ruta_users", ThisKey="id_usuario", OtherKey="id_usuario")]
		public EntitySet<asigna_ruta_user> asigna_ruta_users
		{
			get
			{
				return this._asigna_ruta_users;
			}
			set
			{
				this._asigna_ruta_users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_pedido", Storage="_pedidos", ThisKey="id_usuario", OtherKey="id_usuario")]
		public EntitySet<pedido> pedidos
		{
			get
			{
				return this._pedidos;
			}
			set
			{
				this._pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="usuario_pedidos_detalle", Storage="_pedidos_detalles", ThisKey="id_usuario", OtherKey="id_usuario")]
		public EntitySet<pedidos_detalle> pedidos_detalles
		{
			get
			{
				return this._pedidos_detalles;
			}
			set
			{
				this._pedidos_detalles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_usuario", Storage="_role", ThisKey="id_rol", OtherKey="id_rol", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.usuarios.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.usuarios.Add(this);
						this._id_rol = value.id_rol;
					}
					else
					{
						this._id_rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_asigna_ruta_users(asigna_ruta_user entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_asigna_ruta_users(asigna_ruta_user entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void attach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_pedidos(pedido entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void attach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_pedidos_detalles(pedidos_detalle entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
	}
}
#pragma warning restore 1591
